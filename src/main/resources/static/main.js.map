{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/auth.interceptor.ts","./src/app/_services/admin.service.ts","./src/app/_services/auth.service.ts","./src/app/_services/collection.service.ts","./src/app/_services/find.service.ts","./src/app/_services/item.service.ts","./src/app/_services/token-storage.service.ts","./src/app/_services/user.service.ts","./src/app/alcohol-collection-details/alcohol-collection-details.component.ts","./src/app/alcohol-collection-details/alcohol-collection-details.component.html","./src/app/alcohol-create/alcohol-create.component.ts","./src/app/alcohol-create/alcohol-create.component.html","./src/app/alcohol-details/alcohol-details.component.ts","./src/app/alcohol-details/alcohol-details.component.html","./src/app/alcohol-edit/alcohol-edit.component.ts","./src/app/alcohol-edit/alcohol-edit.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/board-admin/board-admin.component.ts","./src/app/board-admin/board-admin.component.html","./src/app/board-user/board-user.component.ts","./src/app/board-user/board-user.component.html","./src/app/book-collection-details/book-collection-details.component.ts","./src/app/book-collection-details/book-collection-details.component.html","./src/app/book-create/book-create.component.ts","./src/app/book-create/book-create.component.html","./src/app/book-details/book-details.component.ts","./src/app/book-details/book-details.component.html","./src/app/book-edit/book-edit.component.ts","./src/app/book-edit/book-edit.component.html","./src/app/collection-edit/collection-edit.component.ts","./src/app/collection-edit/collection-edit.component.html","./src/app/create-collection/create-collection.component.ts","./src/app/create-collection/create-collection.component.html","./src/app/find-result/find-result.component.ts","./src/app/find-result/find-result.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Observable } from 'rxjs';\n\nconst TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\n// const TOKEN_HEADER_KEY = 'x-access-token';   // for Node.js Express back-end\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private token: TokenStorageService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      // for Spring Boot back-end\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\n\n    }\n    return next.handle(authReq);\n  }\n}\n\nexport const authInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n//const API_URL = 'http://localhost:8080/api/admin/';\r\nconst API_URL = 'https://i-course.herokuapp.com/api/admin/';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsers(): Observable<any> {\r\n    return this.http.get(API_URL+ 'users', {responseType: \"json\" });\r\n  }\r\n\r\nblock(usersId : any) :  Observable<any>{\r\n  const formData = new FormData();\r\n  formData.append('usersId', usersId);\r\n  return this.http.post(API_URL + 'block', formData);\r\n}\r\n\r\nunblock(usersId : any) :  Observable<any>{\r\n  const formData = new FormData();\r\n  formData.append('usersId', usersId);\r\n  return this.http.post(API_URL + 'unblock', formData);\r\n}\r\n  \r\ndelete(usersId : any) :  Observable<any>{\r\n  const formData = new FormData();\r\n  formData.append('usersId', usersId);\r\n  return this.http.post(API_URL + 'delete', formData);\r\n}\r\n\r\nsetRoleAdmin(usersId : any) :  Observable<any>{\r\n  const formData = new FormData();\r\n  formData.append('usersId', usersId);\r\n  return this.http.post(API_URL + 'setRoleAdmin', formData);\r\n}\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n//const API_URL = 'http://localhost:8080/api/auth/';\nconst API_URL = 'https://i-course.herokuapp.com/api/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials): Observable<any> {\n    return this.http.post(API_URL + 'signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n\n  register(user): Observable<any> {\n    return this.http.post(API_URL + 'signup', {\n      username: user.username,\n      email: user.email,\n      password: user.password\n    }, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n//const API = 'http://localhost:8080/api/';\r\nconst API = 'https://i-course.herokuapp.com/api/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CollectionService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCollectionCreaterForm(id): Observable<any> {\r\n    return this.http.get(API + `${id}`+ '/' + 'create', httpOptions);\r\n  }\r\n\r\n  createCollection(collection, image : File, id): Observable<any> {\r\n    const formData = new FormData();\r\n    formData.append('name', collection.name);\r\n    formData.append('description', collection.description);\r\n    formData.append('theme', collection.theme);\r\n    formData.append('image', image);\r\n    return this.http.post(API + `${id}`+ '/' + 'create', formData);\r\n  }\r\n\r\n  delete(userId, collectionId, collectionType): Observable<any> {\r\n    return this.http.delete(API + 'user/' + `${userId}` + '/' + `${collectionType}`  + '/' + `${collectionId}`);\r\n  }\r\n\r\n  getCollection(userId, collectionId, collectionType) : Observable<any> {\r\n    return this.http.get(API + 'user/' + `${userId}` + '/' + `${collectionType}`  + '/' + `${collectionId}` )\r\n  }\r\n\r\n  updateCollection(collection, image : File, userId, collectionType, collectionId): Observable<any> {\r\n    const formData = new FormData();\r\n    formData.append('name', collection.name);\r\n    formData.append('description', collection.description);\r\n    formData.append('theme', 'nothing');\r\n    formData.append('image', image);\r\n    return this.http.put(API + 'user/' + `${userId}` + '/' + `${collectionType}`  + '/' + `${collectionId}`, formData);\r\n  }\r\n\r\n  setCollectionBitMask(bitMask,userId, collectionId, collectionType ) : Observable<any> {\r\n    const formData = new FormData();\r\n    formData.append('bitMask', bitMask);\r\n    return this.http.put(API + 'user/' + `${userId}` + '/' + `${collectionType}`  + '/' + `${collectionId}` + '/bitMask', formData);\r\n  }\r\n\r\n  getBookCollectionBitMask(collectionId): Observable<any> {\r\n    return this.http.get(API + 'bookCollection/' + `${collectionId}` + '/bitMask');\r\n  }\r\n\r\n  getAlcoholCollectionBitMask(collectionId): Observable<any> {\r\n    return this.http.get(API + 'alcoholCollection/' + `${collectionId}` + '/bitMask');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n//const API_URL = 'http://localhost:8080/api/';\r\nconst API_URL = 'https://i-course.herokuapp.com/api/';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FindService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getHome() : Observable<any>{\r\n    return this.http.get(API_URL + 'home',{responseType : 'json' });\r\n    }\r\n\r\n    getFindResult(word) : Observable<any>{\r\n      return this.http.get(API_URL+'find/' + `${word}`,{responseType : 'json' });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n//const API_URL = 'http://localhost:8080/api/';\r\nconst API_URL = 'https://i-course.herokuapp.com/api/';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ItemService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getBookCollectionBitMask(userId, collectionId, collectionType) : Observable<any> {\r\n        return this.http.get(API_URL + 'user/' + `${userId}` + '/' + `${collectionType}`  + '/' + `${collectionId}`+ \"/b\", { responseType : 'json'})\r\n      }\r\n\r\n    getAllTags() : Observable<any> {\r\n      return this.http.get(API_URL + 'tags', {responseType : 'json'}); \r\n    }\r\n\r\n    createBook(book, tags, collectionId): Observable<any> {\r\n      const formData = new FormData();\r\n      formData.append('name', book.name);\r\n      formData.append('tags', tags);\r\n      formData.append('cost', book.cost);\r\n      formData.append('countOfPages', book.countOfPages);\r\n      formData.append('weight', book.weight);\r\n      formData.append('author', book.author);\r\n      formData.append('genre', book.genre);\r\n      formData.append('publisher', book.publisher);\r\n      formData.append('itSerial', book.itSerial);\r\n      formData.append('hasAudio', book.hasAudio);\r\n      formData.append('hasFilm', book.hasFilm);\r\n      formData.append('comment', book.comment);\r\n      formData.append('summary', book.summary);\r\n      formData.append('recommendation', book.recommendation);\r\n      formData.append('publishingDateOnEnglish', book.publishingDateOnEnglish);\r\n      formData.append('publishingDateOnRussian', book.publishingDateOnRussian);\r\n      formData.append('publishingDateOnJapan', book.publishingDateOnJapan);\r\n      return this.http.post(API_URL+ 'book/' +  `${collectionId}` + '/create', formData);\r\n    } \r\n\r\n    updateBook(book, bookId): Observable<any> {\r\n      const formData = new FormData();\r\n      formData.append('name', book.name);\r\n      formData.append('tags', book.tags);\r\n      formData.append('cost', book.cost);\r\n      formData.append('countOfPages', book.countOfPages);\r\n      formData.append('weight', book.weight);\r\n      formData.append('author', book.author);\r\n      formData.append('genre', book.genre);\r\n      formData.append('publisher', book.publisher);\r\n      formData.append('itSerial', book.itSerial);\r\n      formData.append('hasAudio', book.hasAudio);\r\n      formData.append('hasFilm', book.hasFilm);\r\n      formData.append('comment', book.comment);\r\n      formData.append('summary', book.summary);\r\n      formData.append('recommendation', book.recommendation);\r\n      formData.append('publishingDateOnEnglish', book.publishingDateOnEnglish);\r\n      formData.append('publishingDateOnRussian', book.publishingDateOnRussian);\r\n      formData.append('publishingDateOnJapan', book.publishingDateOnJapan);\r\n      return this.http.put(API_URL + 'book/' + `${bookId}`, formData);\r\n    } \r\n\r\n    getBook(bookId) : Observable<any>{\r\n      return this.http.get(API_URL+ 'book/' +`${bookId}`, {responseType : 'json'});\r\n    }\r\n\r\n    deleteBook(bookId): Observable<any>{\r\n      return this.http.delete(API_URL + 'book/' + `${bookId}`);\r\n    }\r\n\r\n    setBookBitMask(bookId, bitMask){\r\n      const formData = new FormData();\r\n      formData.append('bitMask', bitMask);\r\n      return this.http.post(API_URL+ 'book/' + `${bookId}` + '/bitMask', formData);\r\n    }\r\n\r\n    getItemTags(collectionType, itemId) : Observable<any>{\r\n      return this.http.get(API_URL +`${collectionType}` + '/' + `${itemId}` , {responseType : 'json'});\r\n    }\r\n\r\n    like(userId, itemId, collectionType) : Observable<any>{\r\n      return this.http.post(API_URL + `${userId}` + '/' + `${collectionType}`+ '/' + `${itemId}` +'/like',{responseType : 'json'});\r\n    }\r\n\r\n    unlike(userId, itemId, collectionType) : Observable<any>{\r\n      return this.http.post(API_URL + `${userId}` + '/' + `${collectionType}`+ '/' + `${itemId}` +'/unlike',{responseType : 'json'});\r\n    }\r\n\r\n    getLikeStatus(userId, itemId, collectionType){\r\n      return this.http.get(API_URL + `${userId}` + '/' + `${collectionType}`+ '/' + `${itemId}` +'/like',{responseType : 'json'});\r\n    }\r\n\r\n    createAlcohol(alcohol, tags, collectionId): Observable<any> {\r\n      const formData = new FormData();\r\n      formData.append('name', alcohol.name);\r\n      formData.append('tags', tags);\r\n      formData.append('cost', alcohol.cost);\r\n      formData.append('percent', alcohol.percent);\r\n      formData.append('volume', alcohol.volume);\r\n      formData.append('manufacturer', alcohol.manufacturer);\r\n      formData.append('grade', alcohol.grade);\r\n      formData.append('manufactureCountry', alcohol.manufactureCountry);\r\n      formData.append('hasOneLiter', alcohol.hasOneLiter);\r\n      formData.append('hasTwoLiters', alcohol.hasTwoLiters);\r\n      formData.append('hasFiveLiters', alcohol.hasFiveLiters);\r\n      formData.append('comment', alcohol.comment);\r\n      formData.append('history', alcohol.history);\r\n      formData.append('recommendation', alcohol.recommendation);\r\n      formData.append('manufactureDate', alcohol.manufactureDate);\r\n      formData.append('developmentDate', alcohol.developmentDate);\r\n      formData.append('manufactureDateInBelarus', alcohol.manufactureDateInBelarus);\r\n      return this.http.post(API_URL+ 'alcohol/' + `${collectionId}`+ '/create', formData);\r\n    } \r\n\r\n    updateAlcohol(alcohol, alcoholId): Observable<any> {\r\n      const formData = new FormData();\r\n      formData.append('name', alcohol.name);\r\n      formData.append('tags', alcohol.tags);\r\n      formData.append('cost', alcohol.cost);\r\n      formData.append('percent', alcohol.percent);\r\n      formData.append('volume', alcohol.volume);\r\n      formData.append('manufacturer', alcohol.manufacturer);\r\n      formData.append('grade', alcohol.grade);\r\n      formData.append('manufactureCountry', alcohol.manufactureCountry);\r\n      formData.append('hasOneLiter', alcohol.hasOneLiter);\r\n      formData.append('hasTwoLiters', alcohol.hasTwoLiters);\r\n      formData.append('hasFiveLiters', alcohol.hasFiveLiters);\r\n      formData.append('comment', alcohol.comment);\r\n      formData.append('history', alcohol.history);\r\n      formData.append('recommendation', alcohol.recommendation);\r\n      formData.append('manufactureDate', alcohol.manufactureDate);\r\n      formData.append('developmentDate', alcohol.developmentDate);\r\n      formData.append('manufactureDateInBelarus', alcohol.manufactureDateInBelarus);\r\n      return this.http.put(API_URL + 'alcohol/' + `${alcoholId}`, formData);\r\n    } \r\n\r\n    getAlcohol(alcoholId) : Observable<any>{\r\n      return this.http.get(API_URL+ 'alcohol/' +`${alcoholId}`, {responseType : 'json'});\r\n    }\r\n\r\n    deleteAlcohol(alcoholId): Observable<any>{\r\n      return this.http.delete(API_URL + 'alcohol/' + `${alcoholId}`);\r\n    }\r\n\r\n    setAlcoholBitMask(alcoholId, bitMask){\r\n      const formData = new FormData();\r\n      formData.append('bitMask', bitMask);\r\n      return this.http.post(API_URL+ 'alcohol/' + `${alcoholId}` + '/bitMask', formData);\r\n    }\r\n  }","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n//const API_URL = 'http://localhost:8080/api/test/';\nconst API_URL = 'https://i-course.herokuapp.com/api/test/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getPublicContent(): Observable<any> {\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\n  }\n\n  getUserBoard(): Observable<any> {\n    return this.http.get(API_URL + 'user', { responseType: \"json\" });\n  }\n\n  getAdminBoard(): Observable<any> {\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\n  }\n\n  getUserById(id): Observable<any> {\n    return this.http.get(API_URL+ 'user/'+ `${id}`, {responseType: \"json\" });\n  }\n\n  getUserStatus(id) : Observable<any>{\n    return this.http.get(API_URL+ 'user/'+ `${id}`+ '/status', {responseType: \"json\" });\n  }\n  \n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UserService } from '../_services/user.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute } from '@angular/router';\nimport { CollectionService } from '../_services/collection.service';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n@Component({\n  selector: 'app-alcohol-collection-details',\n  templateUrl: './alcohol-collection-details.component.html',\n  styleUrls: ['./alcohol-collection-details.component.css']\n})\nexport class AlcoholCollectionDetailsComponent implements OnInit {\n\n  currentUser : any;\n  userId : any;\n  collectionId : any;\n  collection : any;\n  collectionType : 'ac';\n  form : any = {};\n  result : any = 0;\n  blocked : any;\n\n  constructor(\n    private userService : UserService, \n    private token: TokenStorageService, \n    private route : ActivatedRoute,\n    private collectionService : CollectionService,\n    private router : Router\n    ){};\n\n  ngOnInit(): void {\n    this.setPathVariables();\n    this.getCollection();\n  }\n\n  getCollection(){\n    this.collectionService.getCollection(this.userId, this.collectionId, this.collectionType).subscribe(\n      data => {\n        this.collection = data;\n        this.result = this.collection.bitMask;\n        this.blocked = this.collection.blocked;\n      },\n      err => {\n        this.collection = JSON.parse(err.error).message;});\n  }\n\n  setPathVariables(){\n    this.collectionId = this.route.snapshot.params[\"collectionId\"];\n    this.userId = this.route.snapshot.params[\"userId\"];\n    this.collectionType = this.route.snapshot.params[\"collectionType\"];\n  }\n\n  deleteCollection(): void{\n    this.collectionService.delete(this.userId, this.collectionId, this.collectionType)\n    .subscribe(\n      response => {\n        this.router.navigate(['/user/' + `${this.userId}`]);\n      },\n      error => {\n      });\n  }\n\n  defineBitMask(): any{\n    this.result = this.defineValue(this.form.cost) + this.defineValue(this.form.percent)*2 +\n      this.defineValue(this.form.volume)*2**2 + \n      this.defineValue(this.form.manufacturer)*2**3 + this.defineValue(this.form.grade)*2**4 + \n      this.defineValue(this.form.manufactureCountry)*2**5 + this.defineValue(this.form.hasOneLiter)*2**6 + \n      this.defineValue(this.form.hasTwoLiters)*2**7 + this.defineValue(this.form.hasFiveLiters)*2**8 +\n      this.defineValue(this.form.comment)*2**9 + this.defineValue(this.form.history)*2**10 + \n      this.defineValue(this.form.recommendation)*2**11 + this.defineValue(this.form.manufactureDate)*2**12 + \n      this.defineValue(this.form.developmentDate)*2**13 + this.defineValue(this.form.manufactureDateInBelarus)*2**14;\n      this.setBitMask();\n  }\n\n  setBitMask(): void{\n    this.collectionService.setCollectionBitMask(this.result,this.userId,this.collectionId,this.collectionType).subscribe();\n  }\n\n  defineValue(value : any) : any{\n    if(value == undefined || value == false || value == NaN) value = 0;\n    else value = 1;\n    return value;\n  }\n\n  isAuthorized() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.isAdmin()) return true;\n    if(this.blocked) return false;\n    if(this.currentUser.id == this.userId) return true;\n    else return false;\n  }\n\n  isAdmin() : boolean {\n    return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n  </header>\n  <h6>{{collection.name}}</h6>\n  <img src={{collection.image.url}} alt=\"err\">\n  <button *ngIf=\"isAuthorized()\" class=\"c\" (click)=\"deleteCollection()\">\n    Delete\n  </button>\n  <a href=\"/user/{{userId}}/{{collectionType}}/{{collectionId}}/edit\" *ngIf=\"isAuthorized()\" class=\"c\">Edit</a>\n  <a href=\"/user/{{userId}}/{{collectionType}}/a/{{collectionId}}/createAlcohol\" *ngIf=\"isAuthorized()\" class=\"c\">Create Alcohol!</a>\n<div *ngIf=\"isAuthorized()\">\n\n  <textarea>{{collection.description}}</textarea>\n  <form  (ngSubmit)=\"defineBitMask()\"\n  name=\"form\"\n  #f=\"ngForm\"\n>\n<div>\n    <input\n      type=\"checkbox\"\n      name=\"cost\"\n      [(ngModel)]=\"form.cost\"\n    />\n    <label for=\"cost\">Cost</label>\n</div>\n<div>\n    <input\n      type=\"checkbox\"\n      name=\"percent\"\n      [(ngModel)]=\"form.percent\"\n      #cpercent=\"ngModel\"\n    />\n    <label for=\"percent\">Percent</label>\n</div>\n  <div>\n    <input\n      type=\"checkbox\"\n      name=\"volume\"\n      [(ngModel)]=\"form.volume\"\n      #volume=\"ngModel\"\n    />\n    <label for=\"volume\">Volume</label>\n  </div>\n\n  <div>\n    <input\n      type=\"checkbox\"\n      name=\"manufacturer\"\n      value=\"8\"\n      [(ngModel)]=\"form.manufacturer\"\n      #manufacturer=\"ngModel\"\n    />\n    <label for=\"manufacturer\">Manufacturer</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"grade\"\n      value=\"16\"\n      [(ngModel)]=\"form.grade\"\n      #grade=\"ngModel\"\n    />\n    <label for=\"grade\">Grade</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"manufactureCountry\"\n      value=\"32\"\n      [(ngModel)]=\"form.manufactureCountry\"\n      #manufactureCountry=\"ngModel\"\n    />\n    <label for=\"manufactureCountry\">ManufactureCountry</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"hasOneLiter\"\n      value=\"64\"\n      [(ngModel)]=\"form.hasOneLiter\"\n      #hasOneLiter=\"ngModel\"\n    />\n    <label for=\"hasOneLiter\">Has one liter?</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"hasTwoLiters\"\n      value=\"128\"\n      [(ngModel)]=\"form.hasTwoLiters\"\n      #hasTwoLiters=\"ngModel\"\n    />\n    <label for=\"hasTwoLiters\">Has two liters?</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"hasFiveLiters\"\n      value=\"256\"\n      [(ngModel)]=\"form.hasFiveLiters\"\n      #hasFiveLiters=\"ngModel\"\n    />\n    <label for=\"hasFiveLiters\">Has five liters?</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"comment\"\n      value=\"512\"\n      [(ngModel)]=\"form.comment\"\n      #comment=\"ngModel\"\n    />\n    <label for=\"comment\">Comment</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"history\"\n      value=\"1024\"\n      [(ngModel)]=\"form.history\"\n      #history=\"ngModel\"\n    />\n    <label for=\"history\">History</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"recommendation\"\n      value=\"2048\"\n      [(ngModel)]=\"form.recommendation\"\n      #recommendation=\"ngModel\"\n    />\n    <label for=\"recommendation\">Recommendation</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"manufactureDate\"\n      value=\"4096\"\n      [(ngModel)]=\"form.manufactureDate\"\n      #manufactureDate=\"ngModel\"\n    />\n    <label for=\"manufactureDate\">Manufacture date</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"developmentDate\"\n      value=\"8192\"\n      [(ngModel)]=\"form.developmentDate\"\n      #developmentDate=\"ngModel\"\n    />\n    <label for=\"developmentDate\">Development date</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"manufactureDateInBelarus\"\n      value=\"16384\"\n      [(ngModel)]=\"form.manufactureDateInBelarus\"\n      #manufactureDateInBelarus=\"ngModel\"\n    />\n    <label for=\"manufactureDateInBelarus\">Manufacture date in Belarus</label>\n  </div>\n\n  <div class=\"form-group\">\n    <button class=\"btn btn-primary btn-block\">Set fields</button>\n  </div>\n</form>\n</div>\n\n<h5>Alcohols</h5>\n<div>\n  <table class=\"table table-hover\">\n    <tr>\n      <td>\n        name\n      </td>\n      <td>\n        recommendation\n      </td>\n    </tr>  \n    <tr *ngFor=\"let alcohol of collection.alcohols;\">\n       <td>\n        {{alcohol.name}}\n      </td>\n      <td>\n        {{alcohol.recommendation}}\n      </td>\n      <td>\n      <a href=\"/user/{{userId}}/{{collectionType}}/a/{{collectionId}}/{{alcohol.id}}\" class=\"c\">Details</a>\n    </td>\n    </tr>\n  </table>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ItemService } from '../_services/item.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute } from '@angular/router';\n\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {FormControl} from '@angular/forms';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { CollectionService } from '../_services/collection.service';\nimport { UserService } from '../_services/user.service';\n \n@Component({\n  selector: 'app-alcohol-create',\n  templateUrl: './alcohol-create.component.html',\n  styleUrls: ['./alcohol-create.component.css']\n})\nexport class AlcoholCreateComponent implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isFailed = false;\n  collectionId : any;\n  collectionType: any;\n  errorMessage = '';\n  currentUser : any;\n  userId : any;\n  bitMask : any;\n  collection : any;\n  blocked : boolean;\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur: boolean = false;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  tagCtrl = new FormControl();\n  filteredTags: Observable<string[]>;\n  tags: string[] = ['Lemon'];\n  allTags: string[];\n\n  @ViewChild('fruitInput') fruitInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(private itemService: ItemService,\n     private collectionService: CollectionService,\n     private token: TokenStorageService,\n     private router: Router,\n     private spinner: NgxSpinnerService,\n     private route: ActivatedRoute,\n     private userService : UserService) { }\n\n  ngOnInit(): void {\n    this.setPathVariables();\n    this.getAllTags();\n    this.getCollectionBitMask();\n    this.setUserStatus();\n  }\n\n  getCollectionBitMask(){\n    this.collectionService.getAlcoholCollectionBitMask(this.collectionId).subscribe(\n      data => {\n        this.collection =data;\n        this.bitMask = this.collection.bitMask;\n      },\n      err => {\n        this.collection = JSON.parse(err.error).message;\n    })\n  }\n\n  setPathVariables(){\n    this.userId = this.route.snapshot.params[\"userId\"];\n    this.collectionId = this.route.snapshot.params[\"collectionId\"];\n    this.collectionType = this.route.snapshot.params[\"collectionType\"];\n  }\n\n  getAllTags(){\n    this.itemService.getAllTags().subscribe(\n      data =>{\n        this.allTags = data;\n    this.filterTags();\n      })\n  }\n\n  filterTags() : void{\n    this.filteredTags = this.tagCtrl.valueChanges.pipe(\n      startWith(null),\n      map((fruit: string | null) => fruit ? this._filter(fruit) : this.allTags.slice()));\n  }\n\n  showField(number : any): boolean{\n    if(number == 1)  return (this.bitMask & 1) == 1;\n    if(number == 2)  return (this.bitMask & 2) == 2;\n    if(number == 4)  return (this.bitMask & 4) == 4;\n    if(number == 8)  return (this.bitMask & 8) == 8;\n    if(number == 16) return (this.bitMask & 16) == 16;\n    if(number == 32) return (this.bitMask & 32) == 32;\n    if(number == 64) return (this.bitMask & 64) == 64;\n    if(number == 128) return  (this.bitMask & 128) == 128;\n    if(number == 256) return (this.bitMask & 256) == 256;\n    if(number == 512) return (this.bitMask & 512) == 512;\n    if(number == 1024) return (this.bitMask & 1024) == 1024;\n    if(number == 2048) return (this.bitMask & 2048) == 2048;\n    if(number == 4096) return (this.bitMask & 4096) == 4096;\n    if(number == 8192) return (this.bitMask & 8192) == 8192;\n    if(number == 16384) return (this.bitMask & 16384) == 16384;\n  }\n\n  onSubmit() : void{\n    this.defineFormValues();\n    this.itemService.createAlcohol(this.form, this.tags,this.collectionId).subscribe();\n    this.router.navigate(['/user/'+ `${this.userId}` + '/' + `${this.collectionType}`  +  '/a/' + `${this.collectionId}`]);\n  }\n\n  defineFormValues(){\n    this.form.hasOneLiter = this.defineValue(this.form.hasOneLiter);\n    this.form.hasTwoLiters = this.defineValue(this.form.hasTwoLiters);\n    this.form.hasFiveLiters = this.defineValue(this.form.hasFiveLiters);\n    if(this.form.cost == undefined) this.form.cost = 0;\n    if(this.form.percent == undefined) this.form.percent = 0;\n    if(this.form.volume == undefined) this.form.volume = 0;\n\n  }\n\n  defineValue(value : any) : any{\n    if(value == undefined || value == false || value == NaN) value = false;\n    else value = true;\n    return value;\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    if ((value || '').trim()) {\n      this.tags.push(value.trim());\n    }\n\n    if (input) {\n      input.value = '';\n    }\n\n    this.tagCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.tags.indexOf(fruit);\n\n    if (index >= 0) {\n      this.tags.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.tags.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.tagCtrl.setValue(null);\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.allTags.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  isAuthorized() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.isAdmin()) return true;\n    if(this.blocked) return false;\n    if(this.currentUser.id == this.userId) return true;\n    else return false;\n  }\n\n  isAdmin() : boolean {\n    return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n  }\n\n  setUserStatus(){\n    if(this.currentUser == null) return;\n    this.userService.getUserStatus(this.currentUser.id).subscribe(\n      data => {\n        this.blocked = data;\n      }\n    )\n  }\n\n}","<div *ngIf=\"isAuthorized()\" class=\"col-md-12\">\r\n<div class=\"card card-container\">\r\n    <form (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n    name=\"form\"\r\n    novalidate\r\n    #f=\"ngForm\"\r\n  >\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Name</label>\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      name=\"name\"\r\n      [(ngModel)]=\"form.name\"\r\n      required\r\n      minlength=\"3\"\r\n      maxlength=\"20\"\r\n      #name=\"ngModel\"\r\n    />\r\n    <div class=\"alert-danger\" *ngIf=\"f.submitted && name.invalid\">\r\n      <div *ngIf=\"name.errors.required\">Name is required</div>\r\n      <div *ngIf=\"name.errors.minlength\">\r\n        Name must be at least 3 characters\r\n      </div>\r\n      <div *ngIf=\"name.errors.maxlength\">\r\n        Name must be at most 20 characters\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <mat-form-field class=\"demo-chip-list\">\r\n      <mat-chip-list #chipList>\r\n        <mat-chip\r\n          *ngFor=\"let tag of tags\"\r\n          [selectable]=\"selectable\"\r\n          [removable]=\"removable\"\r\n          (removed)=\"remove(tag)\">\r\n          {{tag}}\r\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n        </mat-chip>\r\n        <input\r\n          placeholder=\"New tag...\"\r\n          name=\"tags\"\r\n          [formControl]=\"tagCtrl\"\r\n          [matAutocomplete]=\"auto\"\r\n          [matChipInputFor]=\"chipList\"\r\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n          [matChipInputAddOnBlur]=\"addOnBlur\"\r\n          (matChipInputTokenEnd)=\"add($event)\"\r\n        />\r\n      </mat-chip-list>\r\n      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n        <mat-option *ngFor=\"let tag of filteredTags | async\" [value]=\"tag\">\r\n          {{ tag }}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(1)\">\r\n      <label for=\"cost\">Cost</label>\r\n    <input\r\n      type=\"number\"\r\n      name=\"cost\"\r\n      [(ngModel)]=\"form.cost\"\r\n    />\r\n  </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(2)\">\r\n        <label for=\"percent\">Percent</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"percent\"\r\n        [(ngModel)]=\"form.percent\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(4)\">\r\n        <label for=\"volume\">Volume</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"volume\"\r\n        [(ngModel)]=\"form.volume\"\r\n        #volume=\"ngModel\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(8)\">\r\n      <label for=\"manufacturer\">Manufacturer</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"manufacturer\"\r\n        [(ngModel)]=\"form.manufacturer\"\r\n        #manufacturer=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(16)\">\r\n      <label for=\"grade\">Grade</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"grade\"\r\n        value=\"8\"\r\n        [(ngModel)]=\"form.grade\"\r\n        #grade=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(32)\">\r\n      <label for=\"manufactureCountry\">ManufactureCountry</label>\r\n      <input\r\n      *ngIf=\"showField(16)\"\r\n        type=\"text\"\r\n        name=\"manufactureCountry\"\r\n        value=\"16\"\r\n        [(ngModel)]=\"form.manufactureCountry\"\r\n        #manufactureCountry=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(64)\">\r\n      <label for=\"hasOneLiter\">Has one liter?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"hasOneLiter\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"form.hasOneLiter\"\r\n        #hasOneLiter=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(128)\">\r\n      <label for=\"hasTwoLiters\">Has two liters?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"hasTwoLiters\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"form.hasTwoLiters\"\r\n        #hasTwoLiters=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(256)\">\r\n      <label for=\"hasFiveLiters\">Has five liters?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"hasFiveLiters\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"form.hasFiveLiters\"\r\n        #hasFiveLiters=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(512)\">\r\n      <label for=\"comment\">Comment</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"comment\"\r\n        value=\"512\"\r\n        [(ngModel)]=\"form.comment\"\r\n        #comment=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(1024)\">\r\n      <label for=\"history\">History</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"history\"\r\n        value=\"1024\"\r\n        [(ngModel)]=\"form.history\"\r\n        #history=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(2048)\">\r\n      <label for=\"recommendation\">Recommendation</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"recommendation\"\r\n        value=\"2048\"\r\n        [(ngModel)]=\"form.recommendation\"\r\n        #recommendation=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(4096)\">\r\n      <label for=\"manufactureDate\">Manufacture date</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"manufactureDate\"\r\n        value=\"4096\"\r\n        [(ngModel)]=\"form.manufactureDate\"\r\n        #manufactureDate=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(8192)\">\r\n      <label for=\"developmentDate\">Development date</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"developmentDate\"\r\n        value=\"8192\"\r\n        [(ngModel)]=\"form.developmentDate\"\r\n        #developmentDate=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(16384)\">\r\n      <label for=\"manufactureDateInBelarus\">Manufacture date in Belarus</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"manufactureDateInBelarus\"\r\n        value=\"16384\"\r\n        [(ngModel)]=\"form.manufactureDateInBelarus\"\r\n        #manufactureDateInBelarus=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\">\r\n      <button class=\"btn btn-primary btn-block\">Create</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UserService } from '../_services/user.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute } from '@angular/router';\nimport { ItemService } from '../_services/item.service';\nimport { CollectionService } from '../_services/collection.service';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport {MatButtonModule} from '@angular/material/button';\n\n@Component({\n  selector: 'app-alcohol-details',\n  templateUrl: './alcohol-details.component.html',\n  styleUrls: ['./alcohol-details.component.css']\n})\nexport class AlcoholDetailsComponent implements OnInit {\n\n  currentUser : any;\n  userId : any;\n  alcoholId : any;\n  collectionId : any;\n  alcohol : any;\n  form : any = {};\n  result : any = 0;\n  collectionBitMask : any;\n  alcoholBitMask : any;\n  bitMask : any;\n  collectionType : any;\n  likeStatus : boolean;\n  likeJson : any;\n  bitMaskJson : any;\n  blocked : boolean;\n\n  constructor(\n    private userService : UserService, \n    private token: TokenStorageService, \n    private route : ActivatedRoute,\n    private itemService : ItemService,\n    private collectionService : CollectionService,\n    private router : Router\n    ){};\n\n  ngOnInit(): void {\n    this.setPathVariables();\n    this.currentUser = this.token.getUser();\n    this.getUserStatus();\n    this.getAlcohol();\n    this.getCollectionBitMask();\n    this.getUserStatus();\n  }\n\n  getCollectionBitMask(){\n    this.collectionService.getAlcoholCollectionBitMask(this.collectionId).subscribe(\n      data => {\n        this.bitMaskJson = data;\n        this.collectionBitMask = this.bitMaskJson.bitMask;\n      }\n    )\n  }\n\n  getAlcohol(){\n    this.itemService.getAlcohol(this.alcoholId).subscribe(\n      data => {\n        this.alcohol = data;\n        this.alcoholBitMask = data.bitMask;\n      },\n      err => { this.alcohol = JSON.parse(err.error).message;}\n    );\n  }\n\n  getLikeStatus(){\n    if(this.currentUser != null){\n      this.itemService.getLikeStatus(this.currentUser.id, this.alcoholId, this.collectionType).subscribe(\n        data => {\n          this.likeJson = data;\n          this.likeStatus = this.likeJson.status;\n        }\n      )\n    }\n  }\n\n  setPathVariables(){\n    this.alcoholId = this.route.snapshot.params[\"alcoholId\"];\n    this.collectionType = this.route.snapshot.params[\"collectionType\"];\n    this.userId = this.route.snapshot.params[\"userId\"];\n    this.collectionId = this.route.snapshot.params[\"collectionId\"];\n  }\n\n\n  deleteAlcohol(): void{\n    this.itemService.deleteAlcohol(this.alcoholId)\n    .subscribe(\n      response => {\n        this.router.navigate(['/user/' + `${this.userId}`]);\n      },\n      error => {\n      });\n  }\n\n  defineBitMask(): any{\n    this.result = this.defineValue(this.form.cost) + this.defineValue(this.form.percent)*2 +\n      this.defineValue(this.form.volume)*2**2 + \n      this.defineValue(this.form.manufacturer)*2**3 + this.defineValue(this.form.grade)*2**4 + \n      this.defineValue(this.form.manufactureCountry)*2**5 + this.defineValue(this.form.hasOneLiter)*2**6 + \n      this.defineValue(this.form.hasTwoLiters)*2**7 + this.defineValue(this.form.hasFiveLiters)*2**8 +\n      this.defineValue(this.form.comment)*2**9 + this.defineValue(this.form.history)*2**10 + \n      this.defineValue(this.form.recommendation)*2**11 + this.defineValue(this.form.manufactureDate)*2**12 + \n      this.defineValue(this.form.developmentDate)*2**13 + this.defineValue(this.form.manufactureDateInBelarus)*2**14;\n      this.result = this.result | this.collectionBitMask;\n      this.setBitMask();\n  }\n\n  setBitMask(): void{\n    this.itemService.setAlcoholBitMask(this.alcoholId, this.result).subscribe();\n    this.refresh();\n  }\n\n  refresh(){\n    this.router.navigate(['/user/'+ `${this.userId}` + '/' + `${this.collectionType}` + '/a/' + `${this.collectionId}`]);\n  }\n\n  defineValue(value : any) : any{\n    if(value == undefined || value == false || value == NaN) value = 0;\n    else value = 1;\n    return value;\n  }\n\n  showField(number : any): boolean{\n    this.bitMask = this.alcoholBitMask | this.collectionBitMask;\n    if(number == 1)  return (this.bitMask & 1) == 1;\n    if(number == 2)  return (this.bitMask & 2) == 2;\n    if(number == 4)  return (this.bitMask & 4) == 4;\n    if(number == 8)  return (this.bitMask & 8) == 8;\n    if(number == 16) return (this.bitMask & 16) == 16;\n    if(number == 32) return (this.bitMask & 32) == 32;\n    if(number == 64) return (this.bitMask & 64) == 64;\n    if(number == 128) return  (this.bitMask & 128) == 128;\n    if(number == 256) return (this.bitMask & 256) == 256;\n    if(number == 512) return (this.bitMask & 512) == 512;\n    if(number == 1024) return (this.bitMask & 1024) == 1024;\n    if(number == 2048) return (this.bitMask & 2048) == 2048;\n    if(number == 4096) return (this.bitMask & 4096) == 4096;\n    if(number == 8192) return (this.bitMask & 8192) == 8192;\n    if(number == 16384) return (this.bitMask & 16384) == 16384;\n  }\n\n  like(){\n    this.itemService.like(this.currentUser.id,this.alcoholId, this.collectionType).subscribe();\n    this.reloadPage();\n  }\n\n  unlike(){\n    this.itemService.unlike(this.currentUser.id,this.alcoholId, this.collectionType ).subscribe();\n    this.reloadPage();\n  }\n\n  isLiked() : boolean{\n    console.log(this.likeStatus);\n    return this.likeStatus;\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n  isAuthorized() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.isAdmin()) return true;\n    if(this.blocked) return false;\n    if(this.currentUser.id == this.userId) return true;\n    else return false;\n  }\n\n  isLikeable() : boolean{\n  this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.blocked) return false;\n    else return true;\n  }\n\n  isAdmin() : boolean {\n    return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n  }\n\n  getUserStatus(){\n    if(this.currentUser == null) return;\n    this.userService.getUserStatus(this.currentUser.id).subscribe(\n      data => {\n        this.blocked = data;\n      }\n    )\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n  </header>\n  <button *ngIf=\"isAuthorized()\" class=\"c\" (click)=\"deleteAlcohol()\">\n    Delete\n  </button>\n  <a *ngIf=\"isAuthorized()\" href=\"/user/{{userId}}/{{collectionType}}/a/{{collectionId}}/{{alcoholId}}/edit\" class=\"c\">Edit</a>\n\n<h2>Name : {{alcohol.name}}</h2>\n<h3 *ngIf=\"showField(1)\">Cost : {{alcohol.cost}}</h3>\n<h3 *ngIf=\"showField(2)\">Percent : {{alcohol.percent}}</h3>\n<h3 *ngIf=\"showField(4)\">Volume : {{alcohol.volume}}</h3>\n<h3 *ngIf=\"showField(8)\">Manufacturer : {{alcohol.manufacturer}}</h3>\n<h3 *ngIf=\"showField(16)\">Grade : {{alcohol.grade}}</h3>\n<h3 *ngIf=\"showField(32)\">Manufacture country : {{alcohol.manufactureCountry}}</h3>\n<h3 *ngIf=\"showField(64)\">Has one liter? : {{alcohol.hasOneLiter}}</h3>\n<h3 *ngIf=\"showField(128)\">Has two liters? : {{alcohol.hasTwoLiters}}</h3>\n<h3 *ngIf=\"showField(256)\">Has five liters? : {{alcohol.hasFiveLiters}}</h3>\n<textarea *ngIf=\"showField(512)\">Comment : {{alcohol.comment}}</textarea>\n<textarea *ngIf=\"showField(1024)\">History : {{alcohol.history}}</textarea>\n<textarea *ngIf=\"showField(2048)\">Recommendation : {{alcohol.recommendation}}</textarea>\n<h3 *ngIf=\"showField(4096)\">Manufacture date : {{alcohol.manufactureDate}}</h3>\n<h3 *ngIf=\"showField(8192)\">Development date : {{alcohol.developmentDate}}</h3>\n<h3 *ngIf=\"showField(16384)\">Manufacture date in Belarus : {{alcohol.manufactureDateInBelarus}}</h3>\n<div *ngIf=\"isLikeable()\">\n<button *ngIf=\"isLiked()\" (click)=\"unlike()\" mat-fab enabled>\n  <mat-icon>favorite</mat-icon>\n</button>\n<button  *ngIf=\"!isLiked()\" (click)=\"like()\" mat-fa enabled>\n  <mat-icon>favorite</mat-icon>\n</button>\n</div>\n\n<div *ngIf=\"isAuthorized()\">\n<h2>What fields do you want to see?</h2>\n  <form  (ngSubmit)=\"defineBitMask()\"\n  name=\"form\"\n  #f=\"ngForm\"\n>\n<div>\n    <input\n      type=\"checkbox\"\n      name=\"cost\"\n      [(ngModel)]=\"form.cost\"\n    />\n    <label for=\"cost\">Cost</label>\n</div>\n\n<div>\n    <input\n      type=\"checkbox\"\n      name=\"percent\"\n      [(ngModel)]=\"form.percent\"\n      #countOfPages=\"ngModel\"\n    />\n    <label for=\"percent\">Percent</label>\n</div>\n\n  <div>\n    <input\n      type=\"checkbox\"\n      name=\"volume\"\n      [(ngModel)]=\"form.volume\"\n      #volume=\"ngModel\"\n    />\n    <label for=\"volume\">Volume</label>\n  </div>\n\n  <div>\n    <input\n      type=\"checkbox\"\n      name=\"manufacturer\"\n      value=\"8\"\n      [(ngModel)]=\"form.manufacturer\"\n      #manufacturer=\"ngModel\"\n    />\n    <label for=\"manufacturer\">Manufacturer</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"grade\"\n      value=\"16\"\n      [(ngModel)]=\"form.grade\"\n      #grade=\"ngModel\"\n    />\n    <label for=\"grade\">Grade</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"manufactureCountry\"\n      value=\"32\"\n      [(ngModel)]=\"form.manufactureCountry\"\n      #manufactureCountry=\"ngModel\"\n    />\n    <label for=\"manufactureCountry\">manufactureCountry</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"hasOneLiter\"\n      value=\"64\"\n      [(ngModel)]=\"form.hasOneLiter\"\n      #hasOneLiter=\"ngModel\"\n    />\n    <label for=\"hasOneLiter\">Has one liter?</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"hasTwoLiters\"\n      value=\"128\"\n      [(ngModel)]=\"form.hasTwoLiters\"\n      #hasTwoLiters=\"ngModel\"\n    />\n    <label for=\"hasTwoLiters\">Has two liters?</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"hasFiveLiters\"\n      value=\"256\"\n      [(ngModel)]=\"form.hasFiveLiters\"\n      #hasFiveLiters=\"ngModel\"\n    />\n    <label for=\"hasFiveLiters\">Has five liters?</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"comment\"\n      value=\"512\"\n      [(ngModel)]=\"form.comment\"\n      #comment=\"ngModel\"\n    />\n    <label for=\"comment\">Comment</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"history\"\n      value=\"1024\"\n      [(ngModel)]=\"form.history\"\n      #history=\"ngModel\"\n    />\n    <label for=\"history\">History</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"recommendation\"\n      value=\"2048\"\n      [(ngModel)]=\"form.recommendation\"\n      #recommendation=\"ngModel\"\n    />\n    <label for=\"recommendation\">Recommendation</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"manufactureDate\"\n      value=\"4096\"\n      [(ngModel)]=\"form.manufactureDate\"\n      #manufactureDate=\"ngModel\"\n    />\n    <label for=\"manufactureDate\">Manufacture date</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"developmentDate\"\n      value=\"8192\"\n      [(ngModel)]=\"form.developmentDate\"\n      #developmentDate=\"ngModel\"\n    />\n    <label for=\"developmentDate\">Development date</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"manufactureDateInBelarus\"\n      value=\"16384\"\n      [(ngModel)]=\"form.manufactureDateInBelarus\"\n      #manufactureDateInBelarus=\"ngModel\"\n    />\n    <label for=\"manufactureDateInBelarus\">Manufacture date in Belarus</label>\n  </div>\n\n  <div class=\"form-group\">\n    <button class=\"btn btn-primary btn-block\">Set fields</button>\n  </div>\n</form>\n</div>\n\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ItemService } from '../_services/item.service';\nimport { CollectionService } from '../_services/collection.service';\nimport { UserService } from '../_services/user.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute } from '@angular/router';\n\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {FormControl} from '@angular/forms';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n \n@Component({\n  selector: 'app-alcohol-edit',\n  templateUrl: './alcohol-edit.component.html',\n  styleUrls: ['./alcohol-edit.component.css']\n})\nexport class AlcoholEditComponent implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isFailed = false;\n  collectionId : any;\n  collectionType: any;\n  errorMessage = '';\n  currentUser : any;\n  userId : any;\n  bitMask : any;\n  collection : any;\n  alcohol : any;\n  alcoholId : any;\n  collectionBitMask : any;\n  blocked : boolean;\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur: boolean = false;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  tagCtrl = new FormControl();\n  filteredTags: Observable<string[]>;\n  tags: string[];\n  allTags: string[];\n\n  @ViewChild('fruitInput') fruitInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(private itemService: ItemService,\n    private collectionService: CollectionService,\n     private token: TokenStorageService,\n     private router: Router,\n     private spinner: NgxSpinnerService,\n     private route: ActivatedRoute,\n     private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.setPathVariables();\n    this.getAlcohol();\n    this.getAllTags();\n    this.getCollectionBitMask();\n    this.getUserStatus();\n  }\n\n  getCollectionBitMask(){\n    this.collectionService.getAlcoholCollectionBitMask(this.collectionId).subscribe(\n      data => {\n        this.collection = data;\n        this.collectionBitMask = this.collection.bitMask;\n      },\n      err => {\n        this.collection = JSON.parse(err.error).message;\n      })\n  }\n\n  getAllTags(){\n    this.itemService.getAllTags().subscribe(\n      data =>{\n        this.allTags = data;\n    this.filterTags();\n      })\n  }\n\n  getAlcohol(){\n    this.itemService.getAlcohol(this.alcoholId).subscribe(\n      data => {\n        this.alcohol = data;\n      })\n\n    this.itemService.getItemTags(this.collectionType, this.alcoholId).subscribe(\n      data =>{this.tags = data;}\n  \n    )\n  }\n\n  setPathVariables(){\n    this.userId = this.route.snapshot.params[\"userId\"];\n    this.collectionId = this.route.snapshot.params[\"collectionId\"];\n    this.collectionType = this.route.snapshot.params[\"collectionType\"];\n    this.alcoholId = this.route.snapshot.params[\"alcoholId\"];\n  }\n\n  filterTags() : void{\n    this.filteredTags = this.tagCtrl.valueChanges.pipe(\n      startWith(null),\n      map((fruit: string | null) => fruit ? this._filter(fruit) : this.allTags.slice()));\n  }\n\n  showField(number : any): boolean{\n    this.bitMask = this.collectionBitMask | this.alcohol.bitMask;\n    if(number == 1)  return (this.bitMask & 1) == 1;\n    if(number == 2)  return (this.bitMask & 2) == 2;\n    if(number == 4)  return (this.bitMask & 4) == 4;\n    if(number == 8)  return (this.bitMask & 8) == 8;\n    if(number == 16) return (this.bitMask & 16) == 16;\n    if(number == 32) return (this.bitMask & 32) == 32;\n    if(number == 64) return (this.bitMask & 64) == 64;\n    if(number == 128) return  (this.bitMask & 128) == 128;\n    if(number == 256) return (this.bitMask & 256) == 256;\n    if(number == 512) return (this.bitMask & 512) == 512;\n    if(number == 1024) return (this.bitMask & 1024) == 1024;\n    if(number == 2048) return (this.bitMask & 2048) == 2048;\n    if(number == 4096) return (this.bitMask & 4096) == 4096;\n    if(number == 8192) return (this.bitMask & 8192) == 8192;\n    if(number == 16384) return (this.bitMask & 16384) == 16384;\n  }\n\n  onSubmit() : void{\n    this.alcohol.tags = this.tags;\n    console.log(this.alcohol.hasFilm);\n    this.itemService.updateBook(this.alcohol, this.alcoholId).subscribe();\n    this.router.navigate(['/user/'+ `${this.userId}` + '/' + `${this.collectionType}`  +  '/b/' + `${this.collectionId}`]);\n  }\n\n  defineValue(value : any) : any{\n    if(value == undefined || value == false || value == NaN) value = false;\n    else value = true;\n    return value;\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.tags.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n\n    this.tagCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.tags.indexOf(fruit);\n\n    if (index >= 0) {\n      this.tags.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.tags.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.tagCtrl.setValue(null);\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.allTags.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  isAuthorized() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.blocked) return false;\n    if(this.currentUser.id == this.userId || this.isAdmin()) return true;\n    else return false;\n  }\n\n  isAdmin() : void {\n    return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n  }\n\n  getUserStatus(){\n    if(this.currentUser == null) return;\n    this.userService.getUserStatus(this.currentUser.id).subscribe(\n      data => {\n        this.blocked = data;\n      }\n    )\n  }\n}","<div *ngIf=\"isAuthorized()\" class=\"col-md-12\">\r\n<div class=\"card card-container\">\r\n    <form (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n    name=\"form\"\r\n    novalidate\r\n    #f=\"ngForm\"\r\n  >\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Name</label>\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      name=\"name\"\r\n      [(ngModel)]=\"book.name\"\r\n      required\r\n      minlength=\"3\"\r\n      maxlength=\"20\"\r\n      #name=\"ngModel\"\r\n    />\r\n    <div class=\"alert-danger\" *ngIf=\"f.submitted && name.invalid\">\r\n      <div *ngIf=\"name.errors.required\">Name is required</div>\r\n      <div *ngIf=\"name.errors.minlength\">\r\n        Name must be at least 3 characters\r\n      </div>\r\n      <div *ngIf=\"name.errors.maxlength\">\r\n        Name must be at most 20 characters\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <mat-form-field class=\"demo-chip-list\">\r\n      <mat-chip-list #chipList>\r\n        <mat-chip\r\n          *ngFor=\"let tag of tags\"\r\n          [selectable]=\"selectable\"\r\n          [removable]=\"removable\"\r\n          (removed)=\"remove(tag)\">\r\n          {{tag}}\r\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n        </mat-chip>\r\n        <input\r\n          placeholder=\"New tag...\"\r\n          name=\"tags\"\r\n          [formControl]=\"tagCtrl\"\r\n          [matAutocomplete]=\"auto\"\r\n          [matChipInputFor]=\"chipList\"\r\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n          [matChipInputAddOnBlur]=\"addOnBlur\"\r\n          (matChipInputTokenEnd)=\"add($event)\"\r\n        />\r\n      </mat-chip-list>\r\n      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n        <mat-option *ngFor=\"let tag of filteredTags | async\" [value]=\"tag\">\r\n          {{ tag }}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(1)\">\r\n        <label for=\"cost\">Cost</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"cost\"\r\n        [(ngModel)]=\"book.cost\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(2)\">\r\n        <label for=\"percent\">Percent</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"percent\"\r\n        [(ngModel)]=\"alcohol.percent\"\r\n        #percent=\"ngModel\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(4)\">\r\n      <label for=\"volume\">Volume</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"volume\"\r\n        [(ngModel)]=\"alcohol.volume\"\r\n        #volume=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(8)\">\r\n      <label for=\"manufacturer\">Manufacturer</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"manufacturer\"\r\n        value=\"8\"\r\n        [(ngModel)]=\"alcohol.manufacturer\"\r\n        #manufacturer=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(16)\">\r\n      <label for=\"grade\">Grade</label>\r\n      <input\r\n      *ngIf=\"showField(16)\"\r\n        type=\"text\"\r\n        name=\"grade\"\r\n        value=\"16\"\r\n        [(ngModel)]=\"alcohol.grade\"\r\n        #grade=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(32)\">\r\n      <label for=\"manufactureCountry\">Manufacture country</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"manufactureCountry\"\r\n        value=\"32\"\r\n        [(ngModel)]=\"alcohol.manufactureCountry\"\r\n        #manufactureCountry=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(64)\">\r\n      <label for=\"hasOneLiter\">Has one liter?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"hasOneLiter\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"alcohol.hasOneLiter\"\r\n        #hasOneLiter=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(128)\">\r\n      <label for=\"hasTwoLiters\">Has two liters?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"hasTwoLiters\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"alcohol.hasTwoLiters\"\r\n        #hasTwoLiters=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(256)\">\r\n      <label for=\"hasFiveLiters\">Has five liters?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"hasFiveLiters\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"alcohol.hasFiveLiters\"\r\n        #hasFiveLiters=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(512)\">\r\n      <label for=\"comment\">Comment</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"comment\"\r\n        value=\"512\"\r\n        [(ngModel)]=\"alcohol.comment\"\r\n        #comment=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(1024)\">\r\n      <label for=\"history\">History</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"history\"\r\n        value=\"1024\"\r\n        [(ngModel)]=\"alcohol.history\"\r\n        #history=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(2048)\">\r\n      <label for=\"recommendation\">Recommendation</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"recommendation\"\r\n        value=\"2048\"\r\n        [(ngModel)]=\"alcohol.recommendation\"\r\n        #recommendation=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(4096)\">\r\n      <label for=\"manufactureDate\">Manufacture date</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"manufactureDate\"\r\n        value=\"4096\"\r\n        [(ngModel)]=\"alcohol.manufactureDate\"\r\n        #manufactureDate=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(8192)\">\r\n      <label for=\"developmentDate\">Development date</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"developmentDate\"\r\n        value=\"8192\"\r\n        [(ngModel)]=\"alcohol.developmentDate\"\r\n        #developmentDate=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(16384)\">\r\n      <label for=\"manufactureDateInBelarus\">Manufacture date in Belarus</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"manufactureDateInBelarus\"\r\n        value=\"16384\"\r\n        [(ngModel)]=\"alcohol.manufactureDateInBelarus\"\r\n        #manufactureDateInBelarus=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\">\r\n      <button class=\"btn btn-primary btn-block\">Update</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BoardUserComponent } from './board-user/board-user.component';\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\nimport { CreateCollectionComponent } from './create-collection/create-collection.component';\nimport { BookCollectionDetailsComponent } from './book-collection-details/book-collection-details.component';\nimport { AlcoholCollectionDetailsComponent } from './alcohol-collection-details/alcohol-collection-details.component';\nimport { EditCollectionComponent } from './collection-edit/collection-edit.component';\nimport { BookCreateComponent } from './book-create/book-create.component';\nimport { AlcoholCreateComponent } from './alcohol-create/alcohol-create.component';\nimport { BookDetailsComponent } from './book-details/book-details.component';\nimport { AlcoholDetailsComponent } from './alcohol-details/alcohol-details.component';\nimport { BookEditComponent } from './book-edit/book-edit.component';\nimport { AlcoholEditComponent } from './alcohol-edit/alcohol-edit.component';\nimport { FindResultComponent } from './find-result/find-result.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'user/:userId', component: BoardUserComponent },\n  { path: 'admin', component: BoardAdminComponent },\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'user/:userId/cc', component: CreateCollectionComponent},\n  { path: 'user/:userId/:collectionType/b/:collectionId', component: BookCollectionDetailsComponent},\n  { path: 'user/:userId/:collectionType/a/:collectionId', component: AlcoholCollectionDetailsComponent},\n  { path: 'user/:userId/:collectionType/:collectionId/edit', component: EditCollectionComponent},\n  { path: 'user/:userId/:collectionType/b/:collectionId/createBook', component: BookCreateComponent},\n  { path: 'user/:userId/:collectionType/a/:collectionId/createAlcohol', component: AlcoholCreateComponent},\n  { path: 'user/:userId/:collectionType/b/:collectionId/:bookId', component: BookDetailsComponent},\n  { path: 'user/:userId/:collectionType/a/:collectionId/:alcoholId', component: AlcoholDetailsComponent},\n  { path: 'user/:userId/:collectionType/b/:collectionId/:bookId/edit', component: BookEditComponent},\n  { path: 'user/:userId/:collectionType/a/:collectionId/:alcoholId/edit', component: AlcoholEditComponent},\n  { path: 'find/:word', component: FindResultComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './_services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private roles: string[];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username: string;\n  currentUser : any;\n  title = 'course-angular';\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.roles = user.roles;\n      this.currentUser = this.tokenStorageService.getUser();\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n      this.username = user.username;\n    }\n  }\n\n  logout(): void {\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n}\n","<div id=\"app\">\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\n      <li class=\"nav-item\">\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\n        <a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/user/{{currentUser.id}}\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"user/{{currentUser.id}}\">Collections</a>\n      </li>\n      <li>\n        <input type=\"text\" >\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\n      </li>\n    </ul>\n  </nav>\n\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\nimport { BoardUserComponent } from './board-user/board-user.component';\nimport { BookCollectionDetailsComponent } from './book-collection-details/book-collection-details.component';\nimport { AlcoholCollectionDetailsComponent } from './alcohol-collection-details/alcohol-collection-details.component';\nimport { BookDetailsComponent } from './book-details/book-details.component';\nimport { AlcoholDetailsComponent } from './alcohol-details/alcohol-details.component';\n\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\nimport { CollectionService } from './_services/collection.service';\nimport { CreateCollectionComponent } from './create-collection/create-collection.component';\nimport { EditCollectionComponent } from './collection-edit/collection-edit.component';\nimport { BookCreateComponent } from './book-create/book-create.component';\nimport { MatFormFieldModule} from '@angular/material/form-field'\nimport {MatChipsModule} from '@angular/material/chips';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from '@angular/material/icon';\nimport { BookEditComponent } from './book-edit/book-edit.component';\nimport { AlcoholEditComponent } from './alcohol-edit/alcohol-edit.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport { AlcoholCreateComponent } from './alcohol-create/alcohol-create.component';\nimport { TagCloudModule } from 'angular-tag-cloud-module';\nimport { FindResultComponent } from './find-result/find-result.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    BoardAdminComponent,\n    BoardUserComponent,\n    CreateCollectionComponent,\n    BookCollectionDetailsComponent,\n    AlcoholCollectionDetailsComponent,\n    EditCollectionComponent,\n    BookCreateComponent,\n    AlcoholCreateComponent,\n    BookDetailsComponent,\n    AlcoholDetailsComponent,\n    BookEditComponent,\n    AlcoholEditComponent,\n    FindResultComponent\n    \n  ],\n  imports: [\n    MatFormFieldModule,\n    MatChipsModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule, \n    TagCloudModule\n  ],\n  providers: [authInterceptorProviders, CollectionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../_services/admin.service';\nimport { UserService } from '../_services/user.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-board-admin',\n  templateUrl: './board-admin.component.html',\n  styleUrls: ['./board-admin.component.css']\n})\nexport class BoardAdminComponent implements OnInit {\n\n  users : any;\n  form : any = {};\n  selectedOptions : any;\n  currentUser : any;\n  blocked : any;\n\n\n  constructor(private adminService: AdminService, \n              private userService: UserService, \n              private token : TokenStorageService,\n              private router : Router) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) this.router.navigate(['/home']);\n    this.getUserStatus();\n    if(!this.isAdmin() || this.blocked) this.router.navigate(['/home']);\n    this.getUsers();\n  }\n\n  getUsers(){\n    this.adminService.getUsers().subscribe(\n      data => {\n        this.users = data;\n      },\n      err => {\n        this.users = JSON.parse(err.error).message;\n      }\n    );\n  }\n\n  block(){\n    var checkedIDs = this.defineCheckIds();\n    this.adminService.block(checkedIDs).subscribe();\n    this.reloadPage();\n  }\n\n  unblock(){\n    var checkedIDs = this.defineCheckIds();\n    this.adminService.unblock(checkedIDs).subscribe();\n    this.reloadPage();\n  }\n\n  delete(){\n    var checkedIDs = this.defineCheckIds();\n    this.adminService.delete(checkedIDs).subscribe();\n    this.reloadPage();\n  }\n\n  setRoleAdmin(){\n    var checkedIDs = this.defineCheckIds();\n    this.adminService.setRoleAdmin(checkedIDs).subscribe();\n    this.reloadPage();\n  }\n\n\n  defineCheckIds() : any{\n    var checkedIDs = [];\n    Object.keys(this.users).forEach(key => {\n      if(this.users[key].checked) checkedIDs.push(this.users[key].id);\n  })\n  return checkedIDs;  \n}\n\nreloadPage() : void{\n    window.location.reload();\n}\n\nisAdmin() : boolean {\n  if(this.blocked) return false;\n  return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n}\n  \ngetUserStatus(){\n  if(this.currentUser == null) return;\n  this.userService.getUserStatus(this.currentUser.id).subscribe(\n    data => {\n      this.blocked = data;\n    }\n  )\n}\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n  </header>\n</div>\n\n<h5>Users</h5>\n<div>\n  <form\n  name=\"form\"\n  #f=\"ngForm\"\n  >\n  <table class=\"table table-hover\">\n      <tr>\n        <input type=\"checkbox\">\n        <td>name</td>\n        <td>id</td>\n        <td>blocked</td>\n      </tr>  \n      <tr *ngFor=\"let user of users;\">\n        <input name=\"userId\" type=\"checkbox\" [(ngModel)]=\"user.checked\">\n        <td>{{user.name}}</td>\n        <td>{{user.id}}</td>\n        <td>{{user.blocked}}</td>\n        <td>{{user.checked}}</td>\n      </tr>\n      <button class=\"c\" (click)=\"block()\">\n        Block\n      </button>\n\n      <button class=\"c\" (click)=\"unblock()\">\n        Unblock\n      </button>\n\n      <button class=\"c\" (click)=\"setRoleAdmin()\">\n        Set role admin\n      </button>\n\n      <button class=\"c\" (click)=\"delete()\">\n        Delete\n      </button>\n\n  </table>\n  </form>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../_services/user.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-board-user',\n  templateUrl: './board-user.component.html',\n  styleUrls: ['./board-user.component.css']\n})\nexport class BoardUserComponent implements OnInit {\n\n  collections: any;\n  currentUser: any;\n  collection : any;\n  userId : any;\n  bc : string = 'bc';\n  ac : string = 'ac';\n  blocked : any;\n\n  constructor(private userService: UserService, private token: TokenStorageService, private router : Router, private route : ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.userId = this.route.snapshot.params[\"userId\"];\n    this.getUserCollections();\n  }\n\n  getUserCollections(): void{\n    this.userService.getUserById(this.userId).subscribe(\n      data => {\n        this.collections = data;\n        this.blocked = this.collections.blocked;\n      },\n      err => {\n        this.collections = JSON.parse(err.error).message;\n      }\n    );\n  }\n\n  isAuthorized() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.isAdmin()) return true;\n    if(this.blocked) return false;\n    if(this.currentUser.id == this.userId) return true;\n    else return false;\n  }\n\n  isAdmin() : boolean {\n    return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n  }\n  \n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n  </header>\n<div *ngIf=\"isAuthorized()\">\n  <a href=\"/user/{{userId}}/cc\" class=\"c\">Create collection</a>\n</div>\n\n  <h5>Collections</h5>\n  <div>\n    <table>\n      <tr *ngFor=\"let bCollection of collections.bookCollections;\">\n        <img src={{bCollection.image.url}} alt=\"err\">\n        <td>\n          {{bCollection.name}}\n        </td>\n        <a href=\"user/{{userId}}/{{bc}}/b/{{bCollection.id}}\">Details</a>\n      </tr>\n    </table>\n    <table>\n      <tr *ngFor=\"let aCollection of collections.alcoholCollections;\">\n        <img src={{aCollection.image.url}} alt=\"err\">\n        <td>\n          {{aCollection.name}}\n        </td>\n        <a href=\"user/{{userId}}/{{ac}}/a/{{aCollection.id}}\">Details</a>\n      </tr>\n    </table>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UserService } from '../_services/user.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute } from '@angular/router';\nimport { CollectionService } from '../_services/collection.service';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n@Component({\n  selector: 'app-book-collection-details',\n  templateUrl: './book-collection-details.component.html',\n  styleUrls: ['./book-collection-details.component.css']\n})\nexport class BookCollectionDetailsComponent implements OnInit {\n\n  currentUser : any;\n  userId : any;\n  collectionId : any;\n  collection : any;\n  collectionType : any;\n  form : any = {};\n  result : any = 0;\n  blocked : any;\n\n  constructor(\n    private userService : UserService, \n    private token: TokenStorageService, \n    private route : ActivatedRoute,\n    private collectionService : CollectionService,\n    private router : Router\n    ){};\n\n  ngOnInit(): void {\n    this.setPathVariables();\n    this.getCollection();\n  }\n\n  getCollection() : void{\n    this.collectionService.getCollection(this.userId, this.collectionId, this.collectionType).subscribe(\n      data => {\n        this.collection = data;\n        this.result = this.collection.bitMask;\n        this.blocked = this.collection.blocked;\n      },\n      err => {\n        this.collection = JSON.parse(err.error).message;\n      }\n    );\n  }\n\n  setPathVariables() : void{\n    this.collectionId = this.route.snapshot.params[\"collectionId\"];\n    this.userId = this.route.snapshot.params[\"userId\"];\n    this.collectionType = this.route.snapshot.params[\"collectionType\"];\n  }\n\n  deleteCollection(): void{\n    this.collectionService.delete(this.userId, this.collectionId, this.collectionType)\n    .subscribe(\n      response => {\n        this.router.navigate(['/user/' + `${this.userId}`]);\n      },\n      error => {\n      });\n  }\n\n  defineBitMask(): any{\n    this.result = this.defineValue(this.form.cost) + this.defineValue(this.form.countOfPages)*2 +\n      this.defineValue(this.form.weight)*2**2 + \n      this.defineValue(this.form.author)*2**3 + this.defineValue(this.form.genre)*2**4 + \n      this.defineValue(this.form.publisher)*2**5 + this.defineValue(this.form.isSerial)*2**6 + \n      this.defineValue(this.form.hasAudio)*2**7 + this.defineValue(this.form.hasFilm)*2**8 +\n      this.defineValue(this.form.comment)*2**9 + this.defineValue(this.form.summary)*2**10 + \n      this.defineValue(this.form.recommendation)*2**11 + this.defineValue(this.form.publishingDateOnEnglish)*2**12 + \n      this.defineValue(this.form.publishingDateOnRussian)*2**13 + this.defineValue(this.form.publishingDateOnJapan)*2**14;\n      this.setBitMask();\n  }\n\n  setBitMask(): void{\n    this.collectionService.setCollectionBitMask(this.result,this.userId,this.collectionId,this.collectionType).subscribe();\n  }\n\n  defineValue(value : any) : any{\n    if(value == undefined || value == false || value == NaN) value = 0;\n    else value = 1;\n    return value;\n  }\n\n  isAuthorized() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.isAdmin()) return true;\n    if(this.blocked) return false;\n    if(this.currentUser.id == this.userId) return true;\n    else return false;\n  }\n\n  isAdmin() : boolean {\n    return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n  </header>\n  <h6>{{collection.name}}</h6>\n  <img src={{collection.image.url}} alt=\"err\">\n  <button *ngIf=\"isAuthorized()\" class=\"c\" (click)=\"deleteCollection()\">\n    Delete\n  </button>\n  <a href=\"/user/{{userId}}/{{collectionType}}/{{collectionId}}/edit\" *ngIf=\"isAuthorized()\" class=\"c\">Edit</a>\n  <a href=\"/user/{{userId}}/{{collectionType}}/b/{{collectionId}}/createBook\" *ngIf=\"isAuthorized()\" class=\"c\">Create Book!</a>\n  <div><textarea>{{collection.description}}</textarea></div>\n  <div>\n    <table class=\"table table-dark\">\n      <tr>\n        <td>\n          Books\n        </td>\n      </tr>  \n      <tr *ngFor=\"let book of collection.books;\">\n         <td>\n          {{book.name}}\n        </td>\n        <td>\n        <a href=\"/user/{{userId}}/{{collectionType}}/b/{{collectionId}}/{{book.id}}\">Details</a>\n      </td>\n      </tr>\n    </table>\n  </div>\n<div *ngIf=\"isAuthorized()\">\n  <form  (ngSubmit)=\"defineBitMask()\"\n  name=\"form\"\n  #f=\"ngForm\"\n>\n<h3>What field do you want to see:</h3>\n<div>\n    <input\n      type=\"checkbox\"\n      name=\"cost\"\n      [(ngModel)]=\"form.cost\"\n    />\n    <label for=\"cost\">Cost</label>\n</div>\n<div>\n    <input\n      type=\"checkbox\"\n      name=\"countOfPages\"\n      [(ngModel)]=\"form.countOfPages\"\n      #countOfPages=\"ngModel\"\n    />\n    <label for=\"countOfPages\">countOfPages</label>\n</div>\n  <div>\n    <input\n      type=\"checkbox\"\n      name=\"weight\"\n      [(ngModel)]=\"form.weight\"\n      #weight=\"ngModel\"\n    />\n    <label for=\"weight\">Weight</label>\n  </div>\n\n  <div>\n    <input\n      type=\"checkbox\"\n      name=\"author\"\n      value=\"8\"\n      [(ngModel)]=\"form.author\"\n      #author=\"ngModel\"\n    />\n    <label for=\"author\">Author</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"genre\"\n      value=\"16\"\n      [(ngModel)]=\"form.genre\"\n      #genre=\"ngModel\"\n    />\n    <label for=\"genre\">Genre</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"publisher\"\n      value=\"32\"\n      [(ngModel)]=\"form.publisher\"\n      #publisher=\"ngModel\"\n    />\n    <label for=\"publisher\">Publisher</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"isSerial\"\n      value=\"64\"\n      [(ngModel)]=\"form.isSerial\"\n      #isSerial=\"ngModel\"\n    />\n    <label for=\"isSerial\">Is serial?</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"hasAudio\"\n      value=\"128\"\n      [(ngModel)]=\"form.hasAudio\"\n      #hasAudio=\"ngModel\"\n    />\n    <label for=\"hasAudio\">Has audio?</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"hasFilm\"\n      value=\"256\"\n      [(ngModel)]=\"form.hasFilm\"\n      #hasFilm=\"ngModel\"\n    />\n    <label for=\"hasFilm\">Has film?</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"comment\"\n      value=\"512\"\n      [(ngModel)]=\"form.comment\"\n      #comment=\"ngModel\"\n    />\n    <label for=\"comment\">Comment</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"summary\"\n      value=\"1024\"\n      [(ngModel)]=\"form.summary\"\n      #summary=\"ngModel\"\n    />\n    <label for=\"summary\">Summary</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"recommendation\"\n      value=\"2048\"\n      [(ngModel)]=\"form.recommendation\"\n      #recommendation=\"ngModel\"\n    />\n    <label for=\"recommendation\">Recommendation</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"publishingDateOnEnglish\"\n      value=\"4096\"\n      [(ngModel)]=\"form.publishingDateOnEnglish\"\n      #publishingDateOnEnglish=\"ngModel\"\n    />\n    <label for=\"publishingDateOnEnglish\">Publishing date on English</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"publishingDateOnRussian\"\n      value=\"8192\"\n      [(ngModel)]=\"form.publishingDateOnRussian\"\n      #publishingDateOnRussian=\"ngModel\"\n    />\n    <label for=\"publishingDateOnRussian\">Publishing date on Russian</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"publishingDateOnJapan\"\n      value=\"16384\"\n      [(ngModel)]=\"form.publishingDateOnJapan\"\n      #publishingDateOnJapan=\"ngModel\"\n    />\n    <label for=\"publishingDateOnJapan\">Publishing date on Japan</label>\n  </div>\n\n  <div class=\"form-group\">\n    <button class=\"btn btn-primary btn-block\">Set fields</button>\n  </div>\n</form>\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ItemService } from '../_services/item.service';\nimport { UserService } from '../_services/user.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute } from '@angular/router';\n\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {FormControl} from '@angular/forms';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { CollectionService } from '../_services/collection.service';\n \n@Component({\n  selector: 'app-book-create',\n  templateUrl: './book-create.component.html',\n  styleUrls: ['./book-create.component.css']\n})\nexport class BookCreateComponent implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isFailed = false;\n  collectionId : any;\n  collectionType: any;\n  errorMessage = '';\n  currentUser : any;\n  userId : any;\n  bitMask : any;\n  collection : any;\n  blocked : any;\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur: boolean = false;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  tagCtrl = new FormControl();\n  filteredTags: Observable<string[]>;\n  tags: string[] = ['Lemon'];\n  allTags: string[];\n\n  @ViewChild('fruitInput') fruitInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(private itemService: ItemService,\n     private userService: UserService,\n     private collectionService: CollectionService,\n     private token: TokenStorageService,\n     private router: Router,\n     private spinner: NgxSpinnerService,\n     private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.setPathVariables();\n    this.getAllTags();\n    this.getCollectionBitMask();\n    this.setUserStatus();\n  }\n\n  getCollectionBitMask() : void{\n    this.collectionService.getBookCollectionBitMask(this.collectionId).subscribe(\n      data => {\n        this.collection =data;\n        this.bitMask = this.collection.bitMask;\n      },\n      err => {\n        this.collection = JSON.parse(err.error).message;\n      })\n  }\n\n  getAllTags() : void{\n    this.itemService.getAllTags().subscribe(\n      data =>{\n        this.allTags = data;\n    this.filterTags();\n      })\n  }\n\n  setPathVariables() : void {\n    this.userId = this.route.snapshot.params[\"userId\"];\n    this.collectionId = this.route.snapshot.params[\"collectionId\"];\n    this.collectionType = this.route.snapshot.params[\"collectionType\"];\n  }\n\n  filterTags() : void{\n    this.filteredTags = this.tagCtrl.valueChanges.pipe(\n      startWith(null),\n      map((fruit: string | null) => fruit ? this._filter(fruit) : this.allTags.slice()));\n  }\n\n  showField(number : any): boolean{\n    if(number == 1)  return (this.bitMask & 1) == 1;\n    if(number == 2)  return (this.bitMask & 2) == 2;\n    if(number == 4)  return (this.bitMask & 4) == 4;\n    if(number == 8)  return (this.bitMask & 8) == 8;\n    if(number == 16) return (this.bitMask & 16) == 16;\n    if(number == 32) return (this.bitMask & 32) == 32;\n    if(number == 64) return (this.bitMask & 64) == 64;\n    if(number == 128) return  (this.bitMask & 128) == 128;\n    if(number == 256) return (this.bitMask & 256) == 256;\n    if(number == 512) return (this.bitMask & 512) == 512;\n    if(number == 1024) return (this.bitMask & 1024) == 1024;\n    if(number == 2048) return (this.bitMask & 2048) == 2048;\n    if(number == 4096) return (this.bitMask & 4096) == 4096;\n    if(number == 8192) return (this.bitMask & 8192) == 8192;\n    if(number == 16384) return (this.bitMask & 16384) == 16384;\n  }\n\n  onSubmit() : void{\n    this.defineFormValues();\n    this.itemService.createBook(this.form, this.tags,this.collectionId).subscribe();\n    this.router.navigate(['/user/'+ `${this.userId}` + '/' + `${this.collectionType}`  +  '/b/' + `${this.collectionId}`]);\n  }\n\n  defineFormValues(){\n    this.form.hasAudio = this.defineCheckboxValue(this.form.hasAudio);\n    this.form.itSerial = this.defineCheckboxValue(this.form.itSerial);\n    this.form.hasFilm = this.defineCheckboxValue(this.form.hasFilm);\n    if(this.form.cost == undefined) this.form.cost = 0;\n    if(this.form.countOfPages == undefined) this.form.countOfPages = 0;\n    if(this.form.weight == undefined) this.form.weight = 0;\n  }\n\n  defineCheckboxValue(value : any) : any{\n    if(value == undefined || value == false || value == NaN) value = false;\n    else value = true;\n    return value;\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    if ((value || '').trim()) this.tags.push(value.trim());\n    if (input) input.value = '';\n    this.tagCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.tags.indexOf(fruit);\n    if (index >= 0) this.tags.splice(index, 1);\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.tags.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.tagCtrl.setValue(null);\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.allTags.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  isAuthorized() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.isAdmin()) return true;\n    if(this.blocked) return false;\n    if(this.currentUser.id == this.userId) return true;\n    else return false;\n  }\n\n  isAdmin() : boolean {\n    return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n  }\n\n  setUserStatus(){\n    if(this.currentUser == null) return;\n    this.userService.getUserStatus(this.currentUser.id).subscribe(\n      data => {\n        this.blocked = data;\n      }\n    )\n  }\n\n}","<div *ngIf=\"isAuthorized()\" class=\"col-md-12\">\r\n<div class=\"card card-container\">\r\n    <form (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n    name=\"form\"\r\n    novalidate\r\n    #f=\"ngForm\"\r\n  >\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Name</label>\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      name=\"name\"\r\n      [(ngModel)]=\"form.name\"\r\n      required\r\n      minlength=\"3\"\r\n      maxlength=\"20\"\r\n      #name=\"ngModel\"\r\n    />\r\n    <div class=\"alert-danger\" *ngIf=\"f.submitted && name.invalid\">\r\n      <div *ngIf=\"name.errors.required\">Name is required</div>\r\n      <div *ngIf=\"name.errors.minlength\">\r\n        Name must be at least 3 characters\r\n      </div>\r\n      <div *ngIf=\"name.errors.maxlength\">\r\n        Name must be at most 20 characters\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <mat-form-field class=\"demo-chip-list\">\r\n      <mat-chip-list #chipList>\r\n        <mat-chip\r\n          *ngFor=\"let tag of tags\"\r\n          [selectable]=\"selectable\"\r\n          [removable]=\"removable\"\r\n          (removed)=\"remove(tag)\">\r\n          {{tag}}\r\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n        </mat-chip>\r\n        <input\r\n          placeholder=\"New tag...\"\r\n          name=\"tags\"\r\n          [formControl]=\"tagCtrl\"\r\n          [matAutocomplete]=\"auto\"\r\n          [matChipInputFor]=\"chipList\"\r\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n          [matChipInputAddOnBlur]=\"addOnBlur\"\r\n          (matChipInputTokenEnd)=\"add($event)\"\r\n        />\r\n      </mat-chip-list>\r\n      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n        <mat-option *ngFor=\"let tag of filteredTags | async\" [value]=\"tag\">\r\n          {{ tag }}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(1)\">\r\n        <label for=\"cost\">Cost</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"cost\"\r\n        [(ngModel)]=\"form.cost\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(2)\">\r\n        <label for=\"countOfPages\">Count of pages</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"countOfPages\"\r\n        [(ngModel)]=\"form.countOfPages\"\r\n        #countOfPages=\"ngModel\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(4)\">\r\n      <label for=\"weight\">Weight</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"weight\"\r\n        [(ngModel)]=\"form.weight\"\r\n        #weight=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(8)\">\r\n      <label for=\"author\">Author</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"author\"\r\n        value=\"8\"\r\n        [(ngModel)]=\"form.author\"\r\n        #author=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(16)\">\r\n      <label for=\"genre\">Genre</label>\r\n      <input\r\n      *ngIf=\"showField(16)\"\r\n        type=\"text\"\r\n        name=\"genre\"\r\n        value=\"16\"\r\n        [(ngModel)]=\"form.genre\"\r\n        #genre=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(32)\">\r\n      <label for=\"publisher\">Publisher</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"publisher\"\r\n        value=\"32\"\r\n        [(ngModel)]=\"form.publisher\"\r\n        #publisher=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(64)\">\r\n      <label for=\"itSerial\">It serial?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"itSerial\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"form.itSerial\"\r\n        #itSerial=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(128)\">\r\n      <label for=\"hasAudio\">Has audio?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"hasAudio\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"form.hasAudio\"\r\n        #hasAudio=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(256)\">\r\n      <label for=\"hasFilm\">Has film?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"hasFilm\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"form.hasFilm\"\r\n        #hasFilm=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(512)\">\r\n      <label for=\"comment\">Comment</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"comment\"\r\n        value=\"512\"\r\n        [(ngModel)]=\"form.comment\"\r\n        #comment=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(1024)\">\r\n      <label for=\"summary\">Summary</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"summary\"\r\n        value=\"1024\"\r\n        [(ngModel)]=\"form.summary\"\r\n        #summary=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(2048)\">\r\n      <label for=\"recommendation\">Recommendation</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"recommendation\"\r\n        value=\"2048\"\r\n        [(ngModel)]=\"form.recommendation\"\r\n        #recommendation=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(4096)\">\r\n      <label for=\"publishingDateOnEnglish\">Publishing date on English</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"publishingDateOnEnglish\"\r\n        value=\"4096\"\r\n        [(ngModel)]=\"form.publishingDateOnEnglish\"\r\n        #publishingDateOnEnglish=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(8192)\">\r\n      <label for=\"publishingDateOnRussian\">Publishing date on Russian</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"publishingDateOnRussian\"\r\n        value=\"8192\"\r\n        [(ngModel)]=\"form.publishingDateOnRussian\"\r\n        #publishingDateOnRussian=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(16384)\">\r\n      <label for=\"publishingDateOnJapan\">Publishing date on Japan</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"publishingDateOnJapan\"\r\n        value=\"16384\"\r\n        [(ngModel)]=\"form.publishingDateOnJapan\"\r\n        #publishingDateOnJapan=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\">\r\n      <button class=\"btn btn-primary btn-block\">Create</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UserService } from '../_services/user.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute } from '@angular/router';\nimport { ItemService } from '../_services/item.service';\nimport { CollectionService } from '../_services/collection.service';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport {MatButtonModule} from '@angular/material/button';\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.css']\n})\nexport class BookDetailsComponent implements OnInit {\n\n  currentUser : any;\n  userId : any;\n  bookId : any;\n  collectionId : any;\n  book : any;\n  form : any = {};\n  result : any = 0;\n  collectionBitMask : any;\n  bookBitMask : any;\n  bitMask : any;\n  collectionType : any;\n  likeStatus : boolean;\n  likeJson : any;\n  bitMaskJson : any;\n  blocked : boolean;\n  tags : string[];\n\n  constructor(\n    private userService : UserService, \n    private token: TokenStorageService, \n    private route : ActivatedRoute,\n    private itemService : ItemService,\n    private collectionService : CollectionService,\n    private router : Router\n    ){};\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n    this.setPathVariables();\n    if(this.currentUser != null && this.currentUser != undefined){\n    this.getLikeStatus();\n    this.getUserStatus();\n    }\n    this.getBook();\n    this.getCollectionBitMask();\n  }\n\n  getCollectionBitMask() : void {\n    this.collectionService.getBookCollectionBitMask(this.collectionId).subscribe(\n      data => {\n        this.bitMaskJson = data;\n        this.collectionBitMask = this.bitMaskJson.bitMask;\n      }\n    )\n  }\n\n  getBook() : void{\n    this.itemService.getBook(this.bookId).subscribe(\n      data => {\n        this.book = data;\n        this.bookBitMask = data.bitMask;\n        this.tags  = data.tags;\n      },\n      err => { this.book = JSON.parse(err.error).message;}\n    );\n  }\n\n  getLikeStatus() : void{\n    this.itemService.getLikeStatus(this.currentUser.id, this.bookId, this.collectionType).subscribe(\n      data => {\n        this.likeJson = data;\n        this.likeStatus = this.likeJson.status;\n      }\n    )\n    }\n\n  setPathVariables() : void{\n    this.bookId = this.route.snapshot.params[\"bookId\"];\n    this.collectionType = this.route.snapshot.params[\"collectionType\"];\n    this.userId = this.route.snapshot.params[\"userId\"];\n    this.collectionId = this.route.snapshot.params[\"collectionId\"];\n  }\n\n  deleteBook(): void{\n    this.itemService.deleteBook(this.bookId)\n    .subscribe(\n      response => {\n        this.router.navigate(['/user/' + `${this.userId}`]);\n      },\n      error => {\n      });\n  }\n\n  defineBitMask(): any{\n    this.result = this.defineValue(this.form.cost) + this.defineValue(this.form.countOfPages)*2 +\n      this.defineValue(this.form.weight)*2**2 + \n      this.defineValue(this.form.author)*2**3 + this.defineValue(this.form.genre)*2**4 + \n      this.defineValue(this.form.publisher)*2**5 + this.defineValue(this.form.isSerial)*2**6 + \n      this.defineValue(this.form.hasAudio)*2**7 + this.defineValue(this.form.hasFilm)*2**8 +\n      this.defineValue(this.form.comment)*2**9 + this.defineValue(this.form.summary)*2**10 + \n      this.defineValue(this.form.recommendation)*2**11 + this.defineValue(this.form.publishingDateOnEnglish)*2**12 + \n      this.defineValue(this.form.publishingDateOnRussian)*2**13 + this.defineValue(this.form.publishingDateOnJapan)*2**14;\n      this.result = this.result | this.collectionBitMask;\n      this.setBitMask();\n  }\n\n  setBitMask(): void{\n    this.itemService.setBookBitMask(this.bookId, this.result).subscribe();\n    this.refresh();\n  }\n\n  refresh(){\n    this.router.navigate(['/user/'+ `${this.userId}` + '/' + `${this.collectionType}` + '/b/' + `${this.collectionId}`]);\n  }\n\n  defineValue(value : any) : any{\n    if(value == undefined || value == false || value == NaN) value = 0;\n    else value = 1;\n    return value;\n  }\n\n  showField(number : any): boolean{\n    this.bitMask = this.bookBitMask | this.collectionBitMask;\n    if(number == 1)  return (this.bitMask & 1) == 1;\n    if(number == 2)  return (this.bitMask & 2) == 2;\n    if(number == 4)  return (this.bitMask & 4) == 4;\n    if(number == 8)  return (this.bitMask & 8) == 8;\n    if(number == 16) return (this.bitMask & 16) == 16;\n    if(number == 32) return (this.bitMask & 32) == 32;\n    if(number == 64) return (this.bitMask & 64) == 64;\n    if(number == 128) return  (this.bitMask & 128) == 128;\n    if(number == 256) return (this.bitMask & 256) == 256;\n    if(number == 512) return (this.bitMask & 512) == 512;\n    if(number == 1024) return (this.bitMask & 1024) == 1024;\n    if(number == 2048) return (this.bitMask & 2048) == 2048;\n    if(number == 4096) return (this.bitMask & 4096) == 4096;\n    if(number == 8192) return (this.bitMask & 8192) == 8192;\n    if(number == 16384) return (this.bitMask & 16384) == 16384;\n  }\n\n  like(){\n    this.itemService.like(this.currentUser.id,this.bookId, this.collectionType ).subscribe();\n    this.reloadPage();\n  }\n\n  unlike(){\n    this.itemService.unlike(this.currentUser.id,this.bookId, this.collectionType ).subscribe();\n    this.reloadPage();\n  }\n\n  isLiked() : boolean{\n    return this.likeStatus;\n  }\n\n    isLikeable() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.blocked) return false;\n    else return true;\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n  isAuthorized() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.isAdmin()) return true;\n    if(this.blocked) return false;\n    if(this.currentUser.id == this.userId) return true;\n    else return false;\n  }\n\n  isAdmin() : boolean {\n    return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n  }\n\n  getUserStatus(){\n    if(this.currentUser == null) return;\n    this.userService.getUserStatus(this.currentUser.id).subscribe(\n      data => {\n        this.blocked = data;\n      }\n    )\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n  </header>\n  <button *ngIf=\"isAuthorized()\" class=\"c\" (click)=\"deleteBook()\">\n    Delete\n  </button>\n  <a *ngIf=\"isAuthorized()\" href=\"/user/{{userId}}/{{collectionType}}/b/{{collectionId}}/{{bookId}}/edit\" class=\"c\">Edit</a>\n\n<h2>Name : {{book.name}}</h2>\n<table>\n<tr *ngFor=\"let tag of tags;\">\n  <td>\n   #{{tag}}\n </td>\n </tr>\n</table>\n<h3 *ngIf=\"showField(1)\">Cost : {{book.cost}}</h3>\n<h3 *ngIf=\"showField(2)\">Count of pages : {{book.countOfPages}}</h3>\n<h3 *ngIf=\"showField(4)\">Weight : {{book.weight}}</h3>\n<h3 *ngIf=\"showField(8)\">Author : {{book.author}}</h3>\n<h3 *ngIf=\"showField(16)\">Genre : {{book.genre}}</h3>\n<h3 *ngIf=\"showField(32)\">Publisher : {{book.publisher}}</h3>\n<h3 *ngIf=\"showField(64)\">Is serial? : {{book.itSerial}}</h3>\n<h3 *ngIf=\"showField(128)\">Has audio? : {{book.hasAudio}}</h3>\n<h3 *ngIf=\"showField(256)\">Has film? : {{book.hasFilm}}</h3>\n<textarea *ngIf=\"showField(512)\">Comment : {{book.comment}}</textarea>\n<textarea *ngIf=\"showField(1024)\">Summary : {{book.summary}}</textarea>\n<textarea *ngIf=\"showField(2048)\">Recommendation : {{book.recommendation}}</textarea>\n<h3 *ngIf=\"showField(4096)\">Publishing date on english : {{book.publishingDateOnEnglish}}</h3>\n<h3 *ngIf=\"showField(8192)\">Publishing date on russian : {{book.publishingDateOnRussian}}</h3>\n<h3 *ngIf=\"showField(16384)\">Publishing date on japan : {{book.publishingDateOnJapan}}</h3>\n<div *ngIf=\"isLikeable()\">\n<button *ngIf=\"isLiked()\" (click)=\"unlike()\" mat-fab enabled>\n  <mat-icon>favorite</mat-icon>\n</button>\n<button  *ngIf=\"!isLiked()\" (click)=\"like()\" mat-fa enabled>\n  <mat-icon>favorite</mat-icon>\n</button>\n</div>\n\n<div *ngIf=\"isAuthorized()\">\n<h2>What fields do you want to see?</h2>\n  <form  (ngSubmit)=\"defineBitMask()\"\n  name=\"form\"\n  #f=\"ngForm\"\n>\n<div>\n    <input\n      type=\"checkbox\"\n      name=\"cost\"\n      [(ngModel)]=\"form.cost\"\n    />\n    <label for=\"cost\">Cost</label>\n</div>\n<div>\n    <input\n      type=\"checkbox\"\n      name=\"countOfPages\"\n      [(ngModel)]=\"form.countOfPages\"\n      #countOfPages=\"ngModel\"\n    />\n    <label for=\"countOfPages\">countOfPages</label>\n</div>\n  <div>\n    <input\n      type=\"checkbox\"\n      name=\"weight\"\n      [(ngModel)]=\"form.weight\"\n      #weight=\"ngModel\"\n    />\n    <label for=\"weight\">Weight</label>\n  </div>\n\n  <div>\n    <input\n      type=\"checkbox\"\n      name=\"author\"\n      value=\"8\"\n      [(ngModel)]=\"form.author\"\n      #author=\"ngModel\"\n    />\n    <label for=\"author\">Author</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"genre\"\n      value=\"16\"\n      [(ngModel)]=\"form.genre\"\n      #genre=\"ngModel\"\n    />\n    <label for=\"genre\">Genre</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"publisher\"\n      value=\"32\"\n      [(ngModel)]=\"form.publisher\"\n      #publisher=\"ngModel\"\n    />\n    <label for=\"publisher\">Publisher</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"isSerial\"\n      value=\"64\"\n      [(ngModel)]=\"form.isSerial\"\n      #isSerial=\"ngModel\"\n    />\n    <label for=\"isSerial\">Is serial?</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"hasAudio\"\n      value=\"128\"\n      [(ngModel)]=\"form.hasAudio\"\n      #hasAudio=\"ngModel\"\n    />\n    <label for=\"hasAudio\">Has audio?</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"hasFilm\"\n      value=\"256\"\n      [(ngModel)]=\"form.hasFilm\"\n      #hasFilm=\"ngModel\"\n    />\n    <label for=\"hasFilm\">Has film?</label>\n  </div>\n\n  <div class=\"form-group\">\n\n    <input\n      type=\"checkbox\"\n      name=\"comment\"\n      value=\"512\"\n      [(ngModel)]=\"form.comment\"\n      #comment=\"ngModel\"\n    />\n    <label for=\"comment\">Comment</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"summary\"\n      value=\"1024\"\n      [(ngModel)]=\"form.summary\"\n      #summary=\"ngModel\"\n    />\n    <label for=\"summary\">Summary</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"recommendation\"\n      value=\"2048\"\n      [(ngModel)]=\"form.recommendation\"\n      #recommendation=\"ngModel\"\n    />\n    <label for=\"recommendation\">Recommendation</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"publishingDateOnEnglish\"\n      value=\"4096\"\n      [(ngModel)]=\"form.publishingDateOnEnglish\"\n      #publishingDateOnEnglish=\"ngModel\"\n    />\n    <label for=\"publishingDateOnEnglish\">Publishing date on English</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"publishingDateOnRussian\"\n      value=\"8192\"\n      [(ngModel)]=\"form.publishingDateOnRussian\"\n      #publishingDateOnRussian=\"ngModel\"\n    />\n    <label for=\"publishingDateOnRussian\">Publishing date on Russian</label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"checkbox\"\n      name=\"publishingDateOnJapan\"\n      value=\"16384\"\n      [(ngModel)]=\"form.publishingDateOnJapan\"\n      #publishingDateOnJapan=\"ngModel\"\n    />\n    <label for=\"publishingDateOnJapan\">Publishing date on Japan</label>\n  </div>\n\n  <div class=\"form-group\">\n    <button class=\"btn btn-primary btn-block\">Set fields</button>\n  </div>\n</form>\n</div>\n\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ItemService } from '../_services/item.service';\nimport { CollectionService } from '../_services/collection.service';\nimport { UserService } from '../_services/user.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute } from '@angular/router';\n\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {FormControl} from '@angular/forms';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n \n@Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.css']\n})\nexport class BookEditComponent implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isFailed = false;\n  collectionId : any;\n  collectionType: any;\n  errorMessage = '';\n  currentUser : any;\n  userId : any;\n  bitMask : any;\n  collection : any;\n  book : any;\n  bookId : any;\n  collectionBitMask : any;\n  blocked : boolean;\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur: boolean = false;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  tagCtrl = new FormControl();\n  filteredTags: Observable<string[]>;\n  tags: string[];\n  allTags: string[];\n\n  @ViewChild('fruitInput') fruitInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(private itemService: ItemService,\n    private collectionService: CollectionService,\n    private userService: UserService,\n     private token: TokenStorageService,\n     private router: Router,\n     private spinner: NgxSpinnerService,\n     private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.setPathVariables();\n    this.getBook();\n    this.getBookTags();\n    this.getAllTags();\n    this.getBookCollectionBitMask();\n    this.getUserStatus();\n  }\n\n  getBook() : void{\n    this.itemService.getBook(this.bookId).subscribe(\n      data => {\n        this.book = data;\n      })\n  }\n\n  getBookTags() : void{\n    this.itemService.getItemTags(this.collectionType, this.bookId).subscribe(\n      data =>{this.tags = data;}\n    )\n  }\n\n  getAllTags() : void {\n    this.itemService.getAllTags().subscribe(\n      data =>{\n        this.allTags = data;\n    this.filterTags();\n      })\n  }\n\n  getBookCollectionBitMask() : void{\n    this.collectionService.getBookCollectionBitMask(this.collectionId).subscribe(\n      data => {\n        this.collection = data;\n        this.collectionBitMask = this.collection.bitMask;\n      },\n      err => {\n        this.collection = JSON.parse(err.error).message;\n      })\n  }\n\n  setPathVariables() : void{\n    this.bookId = this.route.snapshot.params[\"bookId\"];\n    this.collectionType = this.route.snapshot.params[\"collectionType\"];\n    this.userId = this.route.snapshot.params[\"userId\"];\n    this.collectionId = this.route.snapshot.params[\"collectionId\"];\n  }\n\n  filterTags() : void{\n    this.filteredTags = this.tagCtrl.valueChanges.pipe(\n      startWith(null),\n      map((fruit: string | null) => fruit ? this._filter(fruit) : this.allTags.slice()));\n  }\n\n  showField(number : any): boolean{\n    this.bitMask = this.collectionBitMask | this.book.bitMask;\n    if(number == 1)  return (this.bitMask & 1) == 1;\n    if(number == 2)  return (this.bitMask & 2) == 2;\n    if(number == 4)  return (this.bitMask & 4) == 4;\n    if(number == 8)  return (this.bitMask & 8) == 8;\n    if(number == 16) return (this.bitMask & 16) == 16;\n    if(number == 32) return (this.bitMask & 32) == 32;\n    if(number == 64) return (this.bitMask & 64) == 64;\n    if(number == 128) return  (this.bitMask & 128) == 128;\n    if(number == 256) return (this.bitMask & 256) == 256;\n    if(number == 512) return (this.bitMask & 512) == 512;\n    if(number == 1024) return (this.bitMask & 1024) == 1024;\n    if(number == 2048) return (this.bitMask & 2048) == 2048;\n    if(number == 4096) return (this.bitMask & 4096) == 4096;\n    if(number == 8192) return (this.bitMask & 8192) == 8192;\n    if(number == 16384) return (this.bitMask & 16384) == 16384;\n  }\n\n  onSubmit() : void{\n    this.book.tags = this.tags;\n    console.log(this.book.hasFilm);\n    this.itemService.updateBook(this.book, this.bookId).subscribe();\n    this.router.navigate(['/user/'+ `${this.userId}` + '/' + `${this.collectionType}`  +  '/b/' + `${this.collectionId}`]);\n  }\n\n  defineValue(value : any) : any{\n    if(value == undefined || value == false || value == NaN) value = false;\n    else value = true;\n    return value;\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    if ((value || '').trim()) {\n      this.tags.push(value.trim());\n    }\n\n    if (input) {\n      input.value = '';\n    }\n\n    this.tagCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.tags.indexOf(fruit);\n    if (index >= 0) {\n      this.tags.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.tags.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.tagCtrl.setValue(null);\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.allTags.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  isAuthorized() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.blocked) return false;\n    if(this.currentUser.id == this.userId || this.isAdmin()) return true;\n    else return false;\n  }\n\n  isAdmin() : boolean {\n    return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n  }\n\n  getUserStatus(){\n    if(this.currentUser == null) return;\n    this.userService.getUserStatus(this.currentUser.id).subscribe(\n      data => {\n        this.blocked = data;\n      }\n    )\n  }\n}","<div *ngIf=\"isAuthorized()\" class=\"col-md-12\">\r\n<div class=\"card card-container\">\r\n    <form (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n    name=\"form\"\r\n    novalidate\r\n    #f=\"ngForm\"\r\n  >\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Name</label>\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      name=\"name\"\r\n      [(ngModel)]=\"book.name\"\r\n      required\r\n      minlength=\"3\"\r\n      maxlength=\"20\"\r\n      #name=\"ngModel\"\r\n    />\r\n    <div class=\"alert-danger\" *ngIf=\"f.submitted && name.invalid\">\r\n      <div *ngIf=\"name.errors.required\">Name is required</div>\r\n      <div *ngIf=\"name.errors.minlength\">\r\n        Name must be at least 3 characters\r\n      </div>\r\n      <div *ngIf=\"name.errors.maxlength\">\r\n        Name must be at most 20 characters\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <mat-form-field class=\"demo-chip-list\">\r\n      <mat-chip-list #chipList>\r\n        <mat-chip\r\n          *ngFor=\"let tag of tags\"\r\n          [selectable]=\"selectable\"\r\n          [removable]=\"removable\"\r\n          (removed)=\"remove(tag)\">\r\n          {{tag}}\r\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n        </mat-chip>\r\n        <input\r\n          placeholder=\"New tag...\"\r\n          name=\"tags\"\r\n          [formControl]=\"tagCtrl\"\r\n          [matAutocomplete]=\"auto\"\r\n          [matChipInputFor]=\"chipList\"\r\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n          [matChipInputAddOnBlur]=\"addOnBlur\"\r\n          (matChipInputTokenEnd)=\"add($event)\"\r\n        />\r\n      </mat-chip-list>\r\n      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n        <mat-option *ngFor=\"let tag of filteredTags | async\" [value]=\"tag\">\r\n          {{ tag }}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(1)\">\r\n        <label for=\"cost\">Cost</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"cost\"\r\n        [(ngModel)]=\"book.cost\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(2)\">\r\n        <label for=\"countOfPages\">Count of pages</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"countOfPages\"\r\n        [(ngModel)]=\"book.countOfPages\"\r\n        #countOfPages=\"ngModel\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"showField(4)\">\r\n      <label for=\"weight\">Weight</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"weight\"\r\n        [(ngModel)]=\"book.weight\"\r\n        #weight=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(8)\">\r\n      <label for=\"author\">Author</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"author\"\r\n        value=\"8\"\r\n        [(ngModel)]=\"book.author\"\r\n        #author=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(16)\">\r\n      <label for=\"genre\">Genre</label>\r\n      <input\r\n      *ngIf=\"showField(16)\"\r\n        type=\"text\"\r\n        name=\"genre\"\r\n        value=\"16\"\r\n        [(ngModel)]=\"book.genre\"\r\n        #genre=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(32)\">\r\n      <label for=\"publisher\">Publisher</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"publisher\"\r\n        value=\"32\"\r\n        [(ngModel)]=\"book.publisher\"\r\n        #publisher=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(64)\">\r\n      <label for=\"itSerial\">It serial?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"itSerial\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"book.itSerial\"\r\n        #itSerial=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(128)\">\r\n      <label for=\"hasAudio\">Has audio?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"hasAudio\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"book.hasAudio\"\r\n        #hasAudio=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(256)\">\r\n      <label for=\"hasFilm\">Has film?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"hasFilm\"\r\n        value=\"1\"\r\n        [(ngModel)]=\"book.hasFilm\"\r\n        #hasFilm=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(512)\">\r\n      <label for=\"comment\">Comment</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"comment\"\r\n        value=\"512\"\r\n        [(ngModel)]=\"book.comment\"\r\n        #comment=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(1024)\">\r\n      <label for=\"summary\">Summary</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"summary\"\r\n        value=\"1024\"\r\n        [(ngModel)]=\"book.summary\"\r\n        #summary=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(2048)\">\r\n      <label for=\"recommendation\">Recommendation</label>\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"recommendation\"\r\n        value=\"2048\"\r\n        [(ngModel)]=\"book.recommendation\"\r\n        #recommendation=\"ngModel\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(4096)\">\r\n      <label for=\"publishingDateOnEnglish\">Publishing date on English</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"publishingDateOnEnglish\"\r\n        value=\"4096\"\r\n        [(ngModel)]=\"book.publishingDateOnEnglish\"\r\n        #publishingDateOnEnglish=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(8192)\">\r\n      <label for=\"publishingDateOnRussian\">Publishing date on Russian</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"publishingDateOnRussian\"\r\n        value=\"8192\"\r\n        [(ngModel)]=\"book.publishingDateOnRussian\"\r\n        #publishingDateOnRussian=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\" *ngIf=\"showField(16384)\">\r\n      <label for=\"publishingDateOnJapan\">Publishing date on Japan</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"publishingDateOnJapan\"\r\n        value=\"16384\"\r\n        [(ngModel)]=\"book.publishingDateOnJapan\"\r\n        #publishingDateOnJapan=\"ngModel\"\r\n      />\r\n    </div>\r\n  \r\n    <div class=\"form-group\">\r\n      <button class=\"btn btn-primary btn-block\">Update</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { CollectionService } from '../_services/collection.service';\nimport { UserService } from '../_services/user.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute } from '@angular/router';\n \n@Component({\n  selector: 'app-use',\n  templateUrl: './collection-edit.component.html',\n  styleUrls: ['./collection-edit.component.scss']\n})\nexport class EditCollectionComponent implements OnInit {\n\n  @ViewChild('imagenInputFile', {static: false}) imagenFile: ElementRef;\n\n  image: File;\n  imagenMin: File;\n  form: any = {};\n  isSuccessful = false;\n  isFailed = false;\n  errorMessage = '';\n  currentUser : any;\n  userId : any;\n  collectionType : any;\n  collectionId : any;\n  collection : any;\n  blocked : boolean;\n  constructor(private collectionService: CollectionService,\n     private userService: UserService,\n     private token: TokenStorageService,\n     private router: Router,\n     private spinner: NgxSpinnerService,\n     private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.userId = this.route.snapshot.params[\"userId\"];\n    this.collectionType = this.route.snapshot.params[\"collectionType\"];\n    this.collectionId = this.route.snapshot.params[\"collectionId\"];\n    this.collectionService.getCollection(this.userId,this.collectionId, this.collectionType).subscribe(\n      data => {\n        this.collection = data;\n      },\n      err => {\n        this.collection = JSON.parse(err.error).message;\n      }\n    );\n    this.setUserStatus();\n  }\n\n  onFileChange(event) {\n    this.image = event.target.files[0];\n    const fr = new FileReader();\n    fr.onload = (evento: any) => {\n      this.imagenMin = evento.target.result;};\n    fr.readAsDataURL(this.image);\n  }\n\n  onUpload(): void {\n    this.spinner.show();\n    this.form.name = this.collection.name;\n    this.form.description = this.collection.description;\n    this.collectionService.updateCollection(this.form, this.image, \n      this.userId, this.collectionType, this.collectionId).subscribe(\n      data => {\n        this.spinner.hide();\n        this.router.navigate(['/user/'+ `${this.userId}`]);\n      },\n      err => {\n        alert(err.error.mensaje);\n        this.spinner.hide();\n        this.reset();\n      }\n    );\n  }\n\n  reset(): void {\n    this.image = null;\n    this.imagenMin = null;\n    this.imagenFile.nativeElement.value = '';\n  }\n\n  isAuthorized() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.blocked) return false;\n    if(this.currentUser.id == this.userId || this.isAdmin()) return true;\n    else return false;\n  }\n\n  isAdmin() : boolean {\n    return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n  }\n\n  setUserStatus(){\n    if(this.currentUser == null) return;\n    this.userService.getUserStatus(this.currentUser.id).subscribe(\n      data => {\n        this.blocked = data;\n      }\n    )\n  }\n\n}\n","<div *ngIf=\"isAuthorized()\" class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form  (ngSubmit)=\"onUpload()\" novalidate enctype=\"multipart/form-data\"\n      *ngIf=\"!isSuccessful\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n  <div class=\"container\" appDnd (fileDropped)=\"onFileDropped($event)\">\n    <input type=\"file\" #fileDropRef id=\"image\" multiple (change)=\"onFileChange($event)\" \n      accept=\"image/png, image/jpeg, image/gif, image/jpg\" />\n    <h3>Drag and drop file here</h3>\n  </div>\n  <div *ngIf=\"image\" class=\"mt-5\" style=\"align-content : center\">\n    <h5 >New photo:</h5>\n    <div>\n        <img class=\"image-thumbnail\" style=\"max-width: 100px\" [src]=\"imagenMin\">\n    </div>\n\n</div>\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"name\"\n          [(ngModel)]=\"collection.name\"\n          required\n          minlength=\"3\"\n          maxlength=\"20\"\n          #name=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && name.invalid\">\n          <div *ngIf=\"name.errors.required\">Name is required</div>\n          <div *ngIf=\"name.errors.minlength\">\n            Name must be at least 3 characters\n          </div>\n          <div *ngIf=\"name.errors.maxlength\">\n            Name must be at most 20 characters\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <textarea\n          type=\"text\"\n          class=\"form-control\"\n          name=\"description\"\n          [(ngModel)]=\"collection.description\"\n          required\n          #description=\"ngModel\"\n        >\n        </textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Update</button>\n      </div>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isFailed\">\n        Creation failed!<br />{{ errorMessage }}\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Successful!\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { CollectionService } from '../_services/collection.service';\nimport { UserService } from '../_services/user.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-create-collection',\n  templateUrl: './create-collection.component.html',\n  styleUrls: ['./create-collection.component.scss']\n})\nexport class CreateCollectionComponent implements OnInit {\n\n  @ViewChild('imagenInputFile', {static: false}) imageFile: ElementRef;\n\n  image: File;\n  image1 : File;\n  addedImage: File;\n  form: any = {};\n  isSuccessful = false;\n  isFailed = false;\n  errorMessage = '';\n  currentUser : any;\n  userId : any;\n  blocked : boolean;\n  constructor(\n     private collectionService: CollectionService,\n     private token: TokenStorageService,\n     private router: Router,\n     private spinner: NgxSpinnerService,\n     private route: ActivatedRoute,\n     private userService : UserService) { }\n\n  ngOnInit(): void {\n    this.userId = this.route.snapshot.params[\"userId\"];\n    this.currentUser = this.token.getUser();\n    // this.collectionService.getCollectionCreaterForm(this.userId).subscribe(\n    //   data => { this.image1 = data;}\n    // );\n    this.setUserStatus();\n  }\n\n  onFileChange(event) {\n    this.image = event.target.files[0];\n    const fr = new FileReader();\n    fr.onload = (evento: any) => {\n      this.addedImage = evento.target.result;\n    };\n    fr.readAsDataURL(this.image);\n  }\n\n  onUpload(): void {\n    this.spinner.show();\n    this.collectionService.createCollection(this.form, this.image, this.userId).subscribe(\n      data => {\n        this.spinner.hide();\n        this.router.navigate(['/user/'+ `${this.userId}`]);\n      },\n      err => {\n        alert(err.error.mensaje);\n        this.spinner.hide();\n        this.reset();\n      }\n    );\n  }\n\n  reset(): void {\n    this.image = null;\n    this.addedImage = null;\n    this.imageFile.nativeElement.value = '';\n  }\n\n  isAuthorized() : boolean{\n    this.currentUser = this.token.getUser();\n    if(this.currentUser == null) return false;\n    if(this.isAdmin()) return true;\n    if(this.blocked) return false;\n    if(this.currentUser.id == this.userId) return true;\n    else return false;\n  }\n\n  isAdmin() : boolean {\n    return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n  }\n\n  setUserStatus(){\n    if(this.currentUser == null) return;\n    this.userService.getUserStatus(this.currentUser.id).subscribe(\n      data => {\n        this.blocked = data;\n      }\n    )\n  }\n\n\n}\n","<div *ngIf=\"isAuthorized()\" class=\"col-md-12\">\n    <div class=\"card card-container\">\n  \n      <form  (ngSubmit)=\"f.form.valid && onUpload()\" enctype=\"multipart/form-data\"\n        *ngIf=\"!isSuccessful\"\n        name=\"form\"\n        #f=\"ngForm\"\n        validate\n      >\n        <div class=\"container\" appDnd (fileDropped)=\"onFileDropped($event)\">\n          <input name=\"image\" required type=\"file\" #fileDropRef id=\"image\" multiple (change)=\"onFileChange($event)\" \n            accept=\"image/png, image/jpeg, image/gif, image/jpg\" />\n          <h3>Drag and drop file here</h3>\n        </div>\n        <div *ngIf=\"image\" class=\"mt-5\" style=\"align-content : center\">\n          <h5 >Your photo:</h5>\n          <div>\n            <img class=\"image-thumbnail\" style=\"max-width: 100px\" [src]=\"addedImage\">\n          </div>\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"name\"\n            [(ngModel)]=\"form.name\"\n            required\n            minlength=\"3\"\n            maxlength=\"20\"\n            #name=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && name.invalid\">\n            <div *ngIf=\"name.errors.required\">Name is required</div>\n            <div *ngIf=\"name.errors.minlength\">\n              Name must be at least 3 characters\n            </div>\n            <div *ngIf=\"name.errors.maxlength\">\n              Name must be at most 20 characters\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"description\">Description</label>\n          <textarea\n            type=\"text\"\n            class=\"form-control\"\n            name=\"description\"\n            [(ngModel)]=\"form.description\"\n            required\n            #description=\"ngModel\"\n          >\n          </textarea>\n        </div>\n        <div>\n            <div class=\"alert-danger\" *ngIf=\"f.submitted && description.invalid\">\n                <div *ngIf=\"description.errors.required\">Description is required</div>\n                <div *ngIf=\"description.errors.description\">\n                Desription must be a valid\n                </div>\n            </div>\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"theme\">Theme</label>\n          <select           \n          type=\"text\"\n          class=\"form-control\"\n          name=\"theme\"\n          [(ngModel)]=\"form.theme\"\n          required\n          #theme=\"ngModel\">\n            <option value=\"Books\">Books</option>\n            <option value=\"Alcohol\">Alcohol</option>\n          </select>\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && theme.invalid\">\n            <div *ngIf=\"theme.errors.required\">Theme is required</div>\n            <div *ngIf=\"theme.errors.theme\">\n              Theme must be a valid\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"form-group\">\n          <button class=\"btn btn-primary btn-block\">Create</button>\n        </div>\n  \n        <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isFailed\">\n          Creation failed!<br />{{ errorMessage }}\n        </div>\n      </form>\n  \n      <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n        Successful!\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute  } from '@angular/router';\nimport { FindService } from '../_services/find.service';\n@Component({\n  selector: 'app-find-result',\n  templateUrl: './find-result.component.html',\n  styleUrls: ['./find-result.component.css']\n})\nexport class FindResultComponent implements OnInit {\n\n  word : string;\n  items : any;\n  constructor(private route : ActivatedRoute, private findService : FindService) { }\n\n  ngOnInit(): void {\n    this.word = this.route.snapshot.params[\"word\"];\n    this.findService.getFindResult(this.word).subscribe(\n      data => { \n        this.items = data;\n      }\n    );\n  }\n\n}\n","<div>\n    <table class=\"table table-dark\">\n        <tr *ngFor=\"let book of items.books;\">\n            <td>\n             {{book.name}}\n           </td>\n           <td>\n           <a href=\"/user/{{book.userId}}/bc/b/{{book.collectionId}}/{{book.id}}\" class=\"c\">Details</a>\n         </td>\n         </tr>\n    </table>\n</div>\n<div>\n    <table class=\"table table-dark\">\n        <tr *ngFor=\"let alcohol of items.alcohols;\">\n            <td>\n             {{alcohol.name}}\n           </td>\n           <td>\n           <a href=\"/user/{{alcohol.userId}}/ac/a/{{alcohol.collectionId}}/{{alcohol.id}}\" class=\"c\">Details</a>\n         </td>\n         </tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FindService } from '../_services/find.service';\nimport { CloudData, ZoomOnHoverOptions } from 'angular-tag-cloud-module';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  content: string;\n  homeData : any;\n  tags : string[];\n  collection : any;\n  alcohol : any;\n  book : any;\n  cloudTags: CloudData[];\n  constructor(private findService: FindService, private http: HttpClient) { }\n\n  ngOnInit(){\n    this.findService.getHome().subscribe(\n      data =>{\n        this.homeData = data;\n        this.cloudTags = data.tags;\n        this.collection = data.collection;\n        this.alcohol = data.alcohol;\n        this.book = data.book;\n      }\n    );\n  }\n}\n","<div class=\"cloud\">\n  <angular-tag-cloud\n    [data]=\"cloudTags\"\n    [overflow]=\"false\">\n  </angular-tag-cloud>\n</div>\n<div class=\"container\">\n<h3 class=\"h3\">The biggest collection</h3>\n  <table class=\"table table-dark\" *ngIf=\"collection.theme == 'Books'\">\n    <tr>\n      <td>\n        {{collection.name}}\n      </td>\n      <td>\n        {{collection.theme}}\n      </td>\n      <td>\n        <a href=\"/user/{{collection.userId}}/bc/b/{{collection.id}}\">Details</a>\n      </td>\n    </tr>\n  </table>\n</div>\n<div class=\"container\">\n<table class=\"table table-dark\" *ngIf=\"collection.theme == 'Alcohol'\">\n  <tr>\n    <td>\n      {{collection.name}}\n    </td>\n    <td>\n      {{collection.theme}}\n    </td>\n    <td>\n      <a href=\"/user/{{collection.userId}}/ac/a/{{collection.id}}\">Details</a>\n    </td>\n  </tr>\n</table>\n</div>\n<div class=\"container\">\n<h3 class=\"h3\">The latest items</h3>\n<table class=\"table table-dark\">\n<tr *ngIf=\"book != null\">\n<td>\n  {{book.name}}\n</td>\n<td>\n  <a href=\"user/{{book.userId}}/bc/b/{{book.collectionId}}/{{book.id}}\">Details</a>\n</td>\n</tr>\n<tr *ngIf=\"alcohol != null\">\n  <td>\n    {{alcohol.name}}\n  </td>\n  <td>\n    <a href=\"user/{{alcohol.userId}}/ac/a/{{alcohol.collectionId}}/{{alcohol.id}}\">Details</a>\n  </td>\n</tr>\n</table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit(): void {\n    this.authService.login(this.form).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.reloadPage();\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      *ngIf=\"!isLoggedIn\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          #username=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && username.invalid\"\n        >\n          Username is required!\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && password.invalid\"\n        >\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">\n          Login\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && isLoginFailed\"\n        >\n          Login failed: {{ errorMessage }}\n        </div>\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n      Logged in as {{ roles }}.\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  currentUser: any;\n\n  constructor(private token: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n  }\n\n}\n","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\n  <header class=\"jumbotron\">\n    <h3>\n      <strong>{{ currentUser.username }}</strong> Profile\n    </h3>\n  </header>\n  <p>\n    <strong>Token:</strong>\n    {{ currentUser.accessToken.substring(0, 20) }} ...\n    {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}\n  </p>\n  <p>\n    <strong>Email:</strong>\n    {{ currentUser.email }}\n  </p>\n  <strong>Roles:</strong>\n  <ul>\n    <li *ngFor=\"let role of currentUser.roles\">\n      {{ role }}\n    </li>\n  </ul>\n</div>\n\n<ng-template #loggedOut>\n  Please login.\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    this.authService.register(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      *ngIf=\"!isSuccessful\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          minlength=\"3\"\n          maxlength=\"20\"\n          #username=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n          <div *ngIf=\"username.errors.required\">Username is required</div>\n          <div *ngIf=\"username.errors.minlength\">\n            Username must be at least 3 characters\n          </div>\n          <div *ngIf=\"username.errors.maxlength\">\n            Username must be at most 20 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"email\"\n          [(ngModel)]=\"form.email\"\n          required\n          email\n          #email=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n          <div *ngIf=\"email.errors.required\">Email is required</div>\n          <div *ngIf=\"email.errors.email\">\n            Email must be a valid email address\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\n      </div>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration is successful!\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}